{"version":3,"sources":["app/views/ecommerce/ShopSidenav.jsx","app/views/ecommerce/GridProductCard.jsx","app/views/ecommerce/ListProductCard.jsx","app/views/ecommerce/ShopContainer.jsx","app/views/ecommerce/Shop.jsx"],"names":["ShopSidenav","_ref","query","categories","brands","multilevel","categoryList","brandList","ratingList","shipping","sliderRange","toggleSidenav","handleSearch","handleMultilevelChange","handleSliderChange","handleCategoryChange","handleBrandChange","handleRatingClick","handleFreeShippingClick","handleClearAllFilter","react_default","a","createElement","react","className","TextField","margin","name","variant","placeholder","value","onChange","e","target","InputProps","startAdornment","InputAdornment","position","Icon","fontSize","inputProps","style","padding","fullWidth","Hidden","smUp","onClick","Card","elevation","FormControl","component","RadioGroup","aria-label","FormControlLabel","control","Radio","color","label","labelPlacement","Slider","valueLabelDisplay","aria-labelledby","valueLabelFormat","x","map","category","key","title","Checkbox","checked","includes","product","brand","rating","rate","Rating","size","precision","readOnly","Fab","Button","connect","state","addProductToCart","PropTypes","func","isRequired","user","price","src","imgUrl","alt","userId","id","Grid","container","spacing","alignItems","item","lg","md","sm","xs","toFixed","description","substring","ShopContainer","orderBy","view","productList","page","rowsPerPage","toggleView","handleChange","handleChangePage","setRowsPerPage","select","disableUnderline","MenuItem","IconButton","_","slice","ecommerce_GridProductCard","ecommerce_ListProductCard","TablePagination","rowsPerPageOptions","count","length","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","Shop","open","propsReceived","_this","setState","event","newValue","filterProductOnPriceRange","newPage","Object","defineProperty","_this$props$productLi","props","debounceTimer","clearTimeout","setTimeout","filter","toLowerCase","match","eventValue","range","split","_this$props$productLi2","parseInt","tempCategories","concat","toConsumableArray","filterProductOnProperty","tempBrands","shippingStatus","property","arguments","undefined","_this$props$productLi3","lowestPrice","highestPrice","_this$props$productLi4","this","getProductList","getCategoryList","getRatingList","getBrandList","_this$state","_this$state$productLi","_this$props","_this$props$categoryL","_this$props$ratingLis","_this$props$brandList","egret","width","ecommerce_ShopSidenav","ecommerce_ShopContainer","nextProps","prevState","_nextProps$productLis","Component","ecommerce"],"mappings":"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","file":"static/js/68.53a97dbd.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport {\n  Card,\n  TextField,\n  InputAdornment,\n  Icon,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  Slider,\n  Checkbox,\n  Fab,\n  Button,\n  IconButton,\n  Hidden\n} from \"@material-ui/core\";\n\nimport Rating from \"@material-ui/lab/Rating\";\n\nconst ShopSidenav = ({\n  query,\n  categories,\n  brands,\n  multilevel,\n  categoryList,\n  brandList,\n  ratingList,\n  shipping,\n  sliderRange,\n  toggleSidenav,\n  handleSearch,\n  handleMultilevelChange,\n  handleSliderChange,\n  handleCategoryChange,\n  handleBrandChange,\n  handleRatingClick,\n  handleFreeShippingClick,\n  handleClearAllFilter\n}) => {\n  return (\n    <Fragment>\n      <div className=\"pl-16 flex flex-middle mb-16\">\n        <TextField\n          className=\"bg-paper flex-grow-1 mr-16\"\n          margin=\"none\"\n          name=\"query\"\n          variant=\"outlined\"\n          placeholder=\"Search here...\"\n          value={query}\n          onChange={e => handleSearch(e.target.value)}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Icon fontSize=\"small\">search</Icon>\n              </InputAdornment>\n            )\n          }}\n          inputProps={{\n            style: {\n              padding: \"10px\"\n            }\n          }}\n          fullWidth\n        ></TextField>\n        <Hidden smUp>\n          <Icon onClick={toggleSidenav}>clear</Icon>\n        </Hidden>\n      </div>\n      <div className=\"px-16\">\n        <Card elevation={3} className=\"p-16 mb-16\">\n          <h6 className=\"m-0 mb-16\">Multi Level</h6>\n          <FormControl component=\"fieldset\" className=\"w-100\">\n            <RadioGroup\n              aria-label=\"status\"\n              name=\"status\"\n              value={multilevel}\n              onChange={handleMultilevelChange}\n            >\n              <FormControlLabel\n                className=\"h-32\"\n                value=\"0,10\"\n                control={<Radio color=\"secondary\" />}\n                label=\"<$10\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                className=\"h-32\"\n                value=\"10,100\"\n                control={<Radio color=\"secondary\" />}\n                label=\"$10-$100\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                className=\"h-32\"\n                value=\"100,500\"\n                control={<Radio color=\"secondary\" />}\n                label=\"$100-$500\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                className=\"h-32\"\n                value=\"500\"\n                control={<Radio color=\"secondary\" />}\n                label=\">$500\"\n                labelPlacement=\"end\"\n              />\n              <FormControlLabel\n                className=\"h-32\"\n                value=\"all\"\n                control={<Radio color=\"secondary\" />}\n                label=\"All\"\n                labelPlacement=\"end\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Card>\n\n        <Card elevation={3} className=\"p-16 mb-16\">\n          <div className=\"flex flex-space-between flex-middle  mb-16\">\n            <h5 className=\"m-0\">Slider</h5>\n            <span className=\"text-muted\">\n              ${sliderRange[0] * 10} - ${sliderRange[1] * 10}\n            </span>\n          </div>\n          <Slider\n            value={sliderRange}\n            onChange={handleSliderChange}\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"range-slider\"\n            valueLabelFormat={x => x * 10}\n          />\n        </Card>\n\n        <Card elevation={3} className=\"position-relative p-16 mb-16\">\n          <h5 className=\"m-0 mb-16\">Category</h5>\n          {categoryList.map(category => (\n            <div\n              key={category.title}\n              className=\"flex flex-middle flex-space-between\"\n            >\n              <FormControlLabel\n                className=\"flex-grow-1\"\n                name={category.title}\n                onChange={handleCategoryChange}\n                control={\n                  <Checkbox checked={categories.includes(category.title)} />\n                }\n                label={<span className=\"capitalize\">{category.title}</span>}\n              />\n              <small className=\"badge bg-light-primary text-primary\">\n                {category.product}\n              </small>\n            </div>\n          ))}\n        </Card>\n\n        <Card elevation={3} className=\"position-relative p-16 mb-16\">\n          <h5 className=\"m-0 mb-16\">Brands</h5>\n          <TextField\n            className=\"mb-8\"\n            variant=\"outlined\"\n            placeholder=\"Search here...\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Icon fontSize=\"small\">search</Icon>\n                </InputAdornment>\n              )\n            }}\n            inputProps={{\n              style: {\n                padding: \"10px\"\n              }\n            }}\n            fullWidth\n          ></TextField>\n\n          {brandList.map(brand => (\n            <div\n              key={brand.title}\n              className=\"flex flex-middle flex-space-between\"\n            >\n              <FormControlLabel\n                className=\"flex-grow-1\"\n                name={brand.title}\n                onChange={handleBrandChange}\n                control={<Checkbox checked={brands.includes(brand.title)} />}\n                label={brand.title}\n              />\n              <small className=\"badge bg-light-primary text-primary\">\n                {brand.product}\n              </small>\n            </div>\n          ))}\n        </Card>\n\n        <Card elevation={3} className=\"position-relative p-16 mb-16\">\n          <h5 className=\"m-0 mb-16\">Rating</h5>\n          {ratingList.map(rating => (\n            <div\n              key={rating.rate}\n              value={rating.rate}\n              className=\"flex flex-middle flex-space-between cursor-pointer pb-4\"\n              onClick={() => handleRatingClick(rating.rate)}\n            >\n              <Rating\n                size=\"small\"\n                name=\"half-rating\"\n                value={rating.rate}\n                precision={0.5}\n                readOnly={true}\n              />\n              <small className=\"badge bg-light-primary text-primary\">\n                {rating.product}\n              </small>\n            </div>\n          ))}\n        </Card>\n\n        <Card\n          elevation={3}\n          className=\"position-relative p-16 mb-16 flex flex-space-between flex-middle\"\n        >\n          <h5 className=\"m-0\">Toggle</h5>\n          <Fab\n            className=\"px-12 box-shadow-none\"\n            variant=\"extended\"\n            color={shipping ? \"primary\" : \"inherit\"}\n            size=\"small\"\n            onClick={handleFreeShippingClick}\n          >\n            <small className=\"mr-4\">Free Shipping</small>\n            <Icon>add</Icon>\n          </Fab>\n        </Card>\n\n        <Button\n          className=\"w-100\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClearAllFilter}\n        >\n          Clear All Filteres\n        </Button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ShopSidenav;\n","import React from \"react\";\nimport { Card, Button, Icon } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addProductToCart } from \"app/redux/actions/EcommerceActions\";\n\nconst GridProductCard = ({ product, addProductToCart, user }) => {\n  return (\n    <Card\n      elevation={3}\n      className=\"ecommerce__product-card text-center position-relative h-100\"\n    >\n      <div className=\"product__image-box flex flex-center flex-middle position-relative\">\n        <span className=\"product__price m-0\">${product.price}</span>\n        <img src={product.imgUrl} alt={product.title} />\n        <div className=\"image-box__overlay\">\n          <Button\n            variant=\"outlined\"\n            className=\"bg-default\"\n            onClick={() => addProductToCart(user.userId, product.id)}\n          >\n            <Icon className=\"mr-8\">shopping_cart</Icon>\n            <span>Add to cart</span>\n          </Button>\n        </div>\n      </div>\n      <div className=\"p-24\">\n        <h5 className=\"m-0\">{product.title}</h5>\n      </div>\n    </Card>\n  );\n};\n\nconst mapStateToProps = state => ({\n  addProductToCart: PropTypes.func.isRequired,\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProductToCart }\n)(GridProductCard);\n","import React from \"react\";\nimport { Card, Button, Icon, Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addProductToCart } from \"app/redux/actions/EcommerceActions\";\nimport Rating from \"@material-ui/lab/Rating\";\n\nconst ListProductCard = ({ product, addProductToCart, user }) => {\n  return (\n    <Card\n      elevation={3}\n      className=\"ecommerce__product-card p-16 position-relative h-100\"\n    >\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item lg={6} md={6} sm={6} xs={12}>\n          <div className=\"product__image-box flex flex-center flex-middle position-relative\">\n            <img src={product.imgUrl} alt={product.title} />\n            <div className=\"image-box__overlay\">\n              <Button\n                variant=\"outlined\"\n                className=\"bg-default\"\n                onClick={() => addProductToCart(user.userId, product.id)}\n              >\n                <Icon className=\"mr-8\">shopping_cart</Icon>\n                <span>Add to cart</span>\n              </Button>\n            </div>\n          </div>\n        </Grid>\n        <Grid item lg={6} md={6} sm={6} xs={12} className=\"p-24\">\n          <h5 className=\"m-0 mb-12\">{product.title}</h5>\n          <div className=\"flex flex-space-between mb-16\">\n            <span className=\"text-muted\">${product.price.toFixed(2)}</span>\n            <Rating\n              size=\"small\"\n              readOnly={true}\n              name=\"half-rating\"\n              value={product.rating}\n              precision={0.5}\n            />\n          </div>\n          <p className=\"m-0 text-muted\">\n            {product.description.substring(0, 200)}\n          </p>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nconst mapStateToProps = state => ({\n  addProductToCart: PropTypes.func.isRequired,\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProductToCart }\n)(ListProductCard);\n","import React, { Fragment } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Icon,\n  Button,\n  MenuItem,\n  IconButton,\n  TablePagination\n} from \"@material-ui/core\";\n\nimport GridProductCard from \"./GridProductCard\";\nimport ListProductCard from \"./ListProductCard\";\n\nimport * as _ from \"lodash\";\n\nconst ShopContainer = ({\n  orderBy,\n  view,\n  productList,\n  page,\n  rowsPerPage,\n  toggleSidenav,\n  toggleView,\n  handleChange,\n  handleChangePage,\n  setRowsPerPage\n}) => {\n  return (\n    <Fragment>\n      <div className=\"position-relative h-100 w-100\">\n        <div className=\"flex flex-middle flex-space-between mb-8\">\n          <Button\n            className=\"invisible-on-pc\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={toggleSidenav}\n          >\n            Filter\n          </Button>\n          <div className=\"flex flex-middle\">\n            <TextField\n              select\n              name=\"orderBy\"\n              onChange={handleChange}\n              value={orderBy}\n              InputProps={{\n                disableUnderline: true\n              }}\n            >\n              <MenuItem value=\"false\">Default</MenuItem>\n              <MenuItem value=\"asc\">Lowest Price</MenuItem>\n              <MenuItem value=\"desc\">Highest Price</MenuItem>\n            </TextField>\n            <IconButton onClick={() => toggleView(\"grid\")}>\n              <Icon color={view === \"grid\" ? \"primary\" : \"inherit\"}>\n                view_comfy\n              </Icon>\n            </IconButton>\n            <IconButton onClick={() => toggleView(\"list\")}>\n              <Icon color={view === \"list\" ? \"primary\" : \"inherit\"}>list</Icon>\n            </IconButton>\n          </div>\n        </div>\n        <Grid container spacing={2}>\n          {_.orderBy(productList, orderBy !== \"false\" ? \"price\" : \"\", orderBy)\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map(product =>\n              view === \"grid\" ? (\n                <Grid item key={product.id} lg={6} md={6} sm={12} xs={12}>\n                  <GridProductCard product={product}></GridProductCard>\n                </Grid>\n              ) : (\n                <Grid item key={product.id} lg={12} md={12} sm={12} xs={12}>\n                  <ListProductCard product={product}></ListProductCard>\n                </Grid>\n              )\n            )}\n        </Grid>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={[6, 12, 24]}\n        component=\"div\"\n        count={productList.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          \"aria-label\": \"Previous Page\"\n        }}\n        nextIconButtonProps={{\n          \"aria-label\": \"Next Page\"\n        }}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={setRowsPerPage}\n      />\n    </Fragment>\n  );\n};\n\nexport default ShopContainer;\n","import React, { Component } from \"react\";\nimport {\n  EgretSidenavContainer,\n  EgretSidenav,\n  EgretSidenavContent\n} from \"egret\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  getProductList,\n  getCategoryList,\n  getRatingList,\n  getBrandList\n} from \"app/redux/actions/EcommerceActions\";\n\nimport * as _ from \"lodash\";\nimport ShopSidenav from \"./ShopSidenav\";\nimport ShopContainer from \"./ShopContainer\";\n\nclass Shop extends Component {\n  debounceTimer;\n  categories = [];\n  brands = [];\n\n  state = {\n    open: true,\n    view: \"grid\",\n    page: 0,\n    rowsPerPage: 6,\n    orderBy: \"false\",\n    propsReceived: false,\n    sliderRange: [0, 100],\n    query: \"\",\n    multilevel: \"all\",\n    shipping: false,\n    categories: [],\n    brands: []\n  };\n\n  toggleSidenav = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  handleSliderChange = (event, newValue) => {\n    this.setState({ sliderRange: newValue });\n    this.filterProductOnPriceRange(newValue[0] * 10, newValue[1] * 10);\n  };\n\n  setRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleChangePage = (event, newPage) => {\n    this.setState({ page: newPage });\n  };\n\n  toggleView = view => this.setState({ view });\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSearch = query => {\n    let { productList = [] } = this.props;\n\n    this.setState({ query });\n\n    if (this.debounceTimer) {\n      clearTimeout(this.debounceTimer);\n    }\n\n    this.debounceTimer = setTimeout(() => {\n      this.setState({\n        productList: productList.filter(product =>\n          product.title.toLowerCase().match(this.state.query.toLowerCase())\n        )\n      });\n    }, 250);\n  };\n\n  handleMultilevelChange = event => {\n    let eventValue = event.target.value;\n    let range = event.target.value.split(\",\");\n    let { productList = [] } = this.props;\n\n    if (eventValue === \"all\") {\n      this.setState({ multilevel: eventValue, productList });\n      return;\n    }\n\n    this.setState({ multilevel: eventValue });\n\n    range = range.map(value => parseInt(value));\n\n    if (range.length === 2) {\n      this.filterProductOnPriceRange(range[0], range[1]);\n    } else {\n      this.setState({\n        productList: productList.filter(product => product.price >= range[0])\n      });\n    }\n  };\n\n  handleCategoryChange = event => {\n    let target = event.target;\n    let { categories } = this.state;\n    let tempCategories;\n    if (target.checked) {\n      tempCategories = [...categories, target.name];\n      this.setState({\n        categories: tempCategories,\n        productList: this.filterProductOnProperty(\"category\", tempCategories)\n      });\n    } else {\n      tempCategories = categories.filter(item => item !== target.name);\n      this.setState({\n        categories: tempCategories,\n        productList: this.filterProductOnProperty(\"category\", tempCategories)\n      });\n    }\n  };\n\n  handleBrandChange = event => {\n    let target = event.target;\n    let { brands } = this.state;\n    let tempBrands;\n    if (target.checked) {\n      tempBrands = [...brands, target.name];\n      this.setState({\n        brands: tempBrands,\n        productList: this.filterProductOnProperty(\"brand\", tempBrands)\n      });\n    } else {\n      tempBrands = brands.filter(item => item !== target.name);\n      this.setState({\n        brands: tempBrands,\n        productList: this.filterProductOnProperty(\"brand\", tempBrands)\n      });\n    }\n  };\n\n  handleRatingClick = rate => {\n    this.setState({\n      productList: this.filterProductOnProperty(\"rating\", [rate])\n    });\n  };\n\n  handleFreeShippingClick = () => {\n    let shippingStatus = !this.state.shipping;\n    this.setState({\n      shipping: shippingStatus,\n      productList: this.filterProductOnProperty(\"freeShipping\", [\n        shippingStatus\n      ])\n    });\n  };\n\n  filterProductOnProperty = (property, value = []) => {\n    let { productList = [] } = this.props;\n    if (value.length === 0) {\n      return productList;\n    }\n    return productList.filter(product => value.includes(product[property]));\n  };\n\n  filterProductOnPriceRange = (lowestPrice, highestPrice) => {\n    let { productList = [] } = this.props;\n    this.setState({\n      productList: productList.filter(\n        product => product.price >= lowestPrice && product.price <= highestPrice\n      )\n    });\n  };\n\n  handleClearAllFilter = () => {\n    this.setState({\n      sliderRange: [0, 100],\n      query: \"\",\n      multilevel: \"all\",\n      shipping: false,\n      categories: [],\n      brands: [],\n      productList: this.props.productList\n    });\n  };\n\n  componentDidMount() {\n    this.props.getProductList();\n    this.props.getCategoryList();\n    this.props.getRatingList();\n    this.props.getBrandList();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.debounceTimer);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let { productList = [] } = nextProps;\n    if (prevState.propsReceived) {\n      return {};\n    } else if (!prevState.propsReceived && productList.length > 0)\n      return {\n        propsReceived: true,\n        productList\n      };\n    else return {};\n  }\n\n  render() {\n    let {\n      productList = [],\n      brands,\n      categories,\n      sliderRange,\n      view,\n      page,\n      rowsPerPage,\n      orderBy,\n      query,\n      multilevel,\n      shipping\n    } = this.state;\n\n    let { categoryList = [], ratingList = [], brandList = [] } = this.props;\n\n    return (\n      <div className=\"shop m-sm-30\">\n        <EgretSidenavContainer>\n          <EgretSidenav\n            width=\"288px\"\n            open={this.state.open}\n            toggleSidenav={this.toggleSidenav}\n          >\n            <ShopSidenav\n              query={query}\n              categories={categories}\n              brands={brands}\n              multilevel={multilevel}\n              categoryList={categoryList}\n              brandList={brandList}\n              ratingList={ratingList}\n              shipping={shipping}\n              sliderRange={sliderRange}\n              toggleSidenav={this.toggleSidenav}\n              handleSearch={this.handleSearch}\n              handleMultilevelChange={this.handleMultilevelChange}\n              handleSliderChange={this.handleSliderChange}\n              handleCategoryChange={this.handleCategoryChange}\n              handleBrandChange={this.handleBrandChange}\n              handleRatingClick={this.handleRatingClick}\n              handleFreeShippingClick={this.handleFreeShippingClick}\n              handleClearAllFilter={this.handleClearAllFilter}\n            ></ShopSidenav>\n          </EgretSidenav>\n          <EgretSidenavContent>\n            <ShopContainer\n              orderBy={orderBy}\n              view={view}\n              productList={productList}\n              page={page}\n              rowsPerPage={rowsPerPage}\n              toggleView={this.toggleView}\n              toggleSidenav={this.toggleSidenav}\n              handleChange={this.handleChange}\n              handleChangePage={this.handleChangePage}\n              setRowsPerPage={this.setRowsPerPage}\n            ></ShopContainer>\n          </EgretSidenavContent>\n        </EgretSidenavContainer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  getProductList: PropTypes.func.isRequired,\n  getRatingList: PropTypes.func.isRequired,\n  getBrandList: PropTypes.func.isRequired,\n  productList: state.ecommerce.productList,\n  categoryList: state.ecommerce.categoryList,\n  ratingList: state.ecommerce.ratingList,\n  brandList: state.ecommerce.brandList\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProductList, getCategoryList, getRatingList, getBrandList }\n)(Shop);\n"],"sourceRoot":""}