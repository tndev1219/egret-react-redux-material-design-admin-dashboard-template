{"version":3,"sources":["../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/Tooltip/Tooltip.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","app/views/scrum-board/CardEditorDialog.jsx","app/views/scrum-board/ScrumBoardLabelBar.jsx","app/views/scrum-board/ScrumBoardCard.jsx","app/views/scrum-board/BoardList.jsx","app/views/scrum-board/ScrumBoardService.js","app/views/scrum-board/ScrumBoardContainer.jsx","app/views/scrum-board/Board.jsx"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","Avatar","a","forwardRef","props","ref","alt","childrenProp","children","childrenClassNameProp","childrenClassName","classes","classNameProp","className","_props$component","component","Component","imgProps","sizes","src","srcSet","other","Object","img","createElement","isValidElement","cloneElement","root","system","colorDefault","__webpack_exports__","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","textAlign","objectFit","name","_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","react_dom__WEBPACK_IMPORTED_MODULE_5__","react_dom__WEBPACK_IMPORTED_MODULE_5___default","clsx__WEBPACK_IMPORTED_MODULE_8__","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_9__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_10__","_utils_helpers__WEBPACK_IMPORTED_MODULE_11__","_Grow__WEBPACK_IMPORTED_MODULE_12__","_Popper__WEBPACK_IMPORTED_MODULE_13__","_utils_reactHelpers__WEBPACK_IMPORTED_MODULE_14__","_utils_focusVisible__WEBPACK_IMPORTED_MODULE_15__","popper","zIndex","tooltip","pointerEvents","top","left","flip","popperInteractive","shape","common","white","padding","lineHeight","concat","round","maxWidth","fontWeight","fontWeightMedium","touch","fontWeightRegular","tooltipPlacementLeft","transformOrigin","margin","breakpoints","up","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","withTheme","_props$disableFocusLi","disableFocusListener","_props$disableHoverLi","disableHoverListener","_props$disableTouchLi","disableTouchListener","_props$enterDelay","enterDelay","_props$enterTouchDela","enterTouchDelay","id","_props$interactive","interactive","_props$leaveDelay","leaveDelay","_props$leaveTouchDela","leaveTouchDelay","onClose","onOpen","openProp","open","_props$placement","placement","PopperProps","title","_props$TransitionComp","TransitionComponent","TransitionProps","_React$useState","useState","_React$useState2","openState","setOpenState","_React$useState3","forceUpdate","_React$useState5","_React$useState6","childNode","setChildNode","ignoreNonTouchEvents","useRef","isControlled","current","defaultId","closeTimer","enterTimer","leaveTimer","touchTimer","useEffect","Math","random","clearTimeout","handleOpen","event","handleEnter","childrenProps","onMouseOver","removeAttribute","persist","setTimeout","_useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState7","_React$useState8","childIsFocusVisible","setChildIsFocusVisible","handleClose","transitions","duration","shortest","handleLeave","onBlur","onMouseLeave","handleOwnRef","useCallback","instance","findDOMNode","handleRef","shouldShowNativeTitle","aria-describedby","onTouchStart","onTouchEnd","onFocus","currentTarget","interactiveWrapperListeners","Fragment","anchorEl","transition","_ref","placementInner","TransitionPropsInner","timeout","shorter","split","_Typography__WEBPACK_IMPORTED_MODULE_6__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_7__","_FormControl_FormControlContext__WEBPACK_IMPORTED_MODULE_8__","InputAdornment","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","variantProp","variant","muiFormControl","Provider","value","hiddenLabel","filled","start","positionStart","end","positionEnd","dense","marginDense","maxHeight","&$positionStart:not($hiddenLabel)","marginTop","marginRight","marginLeft","CardEditorDialog","state","description","commentText","fullScreen","updateFromProps","closeDialog","_this","windowResizeListener","window","removeEventListener","makeCoverPhoto","coverImage","setState","removeAttachments","index","_this$state$attachmen","attachments","splice","handleChange","target","_this$state","cardMembers","member","boardMembers","find","user","checked","push","indexOf","_this$state2","labels","label","labelList","item","parseInt","key","shiftKey","defineProperty","sendComment","handleSave","_this$state3","_this$state3$cardMemb","_this$state3$labels","_this$state3$attachme","_this$state3$comments","comments","listId","boardId","card","members","map","updateCardInList","_this$state4","trim","generateRandomId","uid","userId","text","time","Date","_this2","this","innerWidth","addEventListener","_this3","_this$props","memberList","_this$state5","_this$state5$cardMemb","_this$state5$boardMem","_this$state5$labels","_this$state5$labelLis","_this$state5$attachme","_this$state5$comments","react_default","Dialog","fullWidth","scroll","Icon","Input","style","autoFocus","onChange","disableUnderline","IconButton","size","onClick","avatar","egret","horizontalPosition","shouldCloseOnItemClick","menuButton","Tooltip","FormControlLabel","control","Checkbox","some","Button","Divider","lib_default","TextField","multiline","htmlFor","multiple","Grid","container","spacing","file","lg","md","sm","xs","Card","elevation","url","MenuItem","minWidth","comment","getTimeDifference","photoURL","onKeyDown","inputProps","nextProps","prevState","undefined","_nextProps$memberList","_nextProps$labelList","board","_card$members","_card$labels","boardMemberId","modifiedLabelList","labelId","boardMember","objectSpread","toConsumableArray","connect","PropTypes","func","isRequired","scrumboard","ScrumBoardLabelBar","_ref$color","_ref$memberList","_ref$labelList","modifiedCardMemberList","length","scrum_board_ScrumBoardLabelBar","BoardList","shouldOpenTitleEditor","shouldOpenAddCard","cardTitleText","columnTitleText","handleAddNewCard","handleRenameList","renameListInBoard","data","column","listTitle","openTitleEditor","openAddCard","addNewCardInList","cardTitle","handleListDelete","deleteListFromBoard","_this$props$data","provided","snapshot","handleCardClick","assign","isDragging","innerRef","draggableProps","dragHandleProps","react_beautiful_dnd_esm","droppableId","direction","ClickAwayListener","onClickAway","defaultValue","InputProps","endAdornment","cardList","draggableId","scrum_board_ScrumBoardCard","placeholder","cardData","axios","post","ScrumBoardContainer","dataLoaded","list","shouldOpenDialog","shouldOpenAddList","columnTitle","handleDialogClose","handleAddListToggle","handleAddList","onDragEnd","result","source","destination","reorderCardInList","moveCardInList","reorderList","_this$props2","droppableProps","scrum_board_BoardList","scrum_board_CardEditorDialog","Board","addListInBoard","match","params","then","memberId","_this$state$board","deleteMemberFromBoard","addMemberInBoard","getBoardById","getAllMembers","getAllLabels","_this$state$board2","_this$state$board2$me","_this$state$board2$li","_this$props$memberLis","react_router_dom","to","scrum_board_ScrumBoardContainer"],"mappings":"4FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAA,GAAAE,EAAAF,EAAA,GAAAG,EAAAH,EAAAI,EAAAF,GAAAG,GAAAL,EAAA,GAAAA,EAAA,IAAAM,EAAAN,EAAA,IAwCAO,EAAaJ,EAAAK,EAAKC,WAAA,SAAAC,EAAAC,GAClB,IAAAC,EAAAF,EAAAE,IACAC,EAAAH,EAAAI,SACAC,EAAAL,EAAAM,kBACAC,EAAAP,EAAAO,QACAC,EAAAR,EAAAS,UACAC,EAAAV,EAAAW,UACAC,OAAA,IAAAF,EAAA,MAAAA,EACAG,EAAAb,EAAAa,SACAC,EAAAd,EAAAc,MACAC,EAAAf,EAAAe,IACAC,EAAAhB,EAAAgB,OACAC,EAAcC,OAAA3B,EAAA,EAAA2B,CAAwBlB,EAAA,4GAEtCI,EAAA,KACAe,EAAAJ,GAAAC,EAkBA,OAfAZ,EADAe,EACe1B,EAAAK,EAAKsB,cAAA,MAAsBF,OAAA7B,EAAA,EAAA6B,CAAQ,CAClDhB,MACAa,MACAC,SACAF,QACAL,UAAAF,EAAAY,KACKN,IACFR,GAAmCZ,EAAAK,EAAKuB,eAAAlB,GAC5BV,EAAAK,EAAKwB,aAAAnB,EAAA,CACpBM,UAAiBS,OAAAvB,EAAA,EAAAuB,CAAIb,EAAAF,EAAAH,MAAAS,aAGrBN,EAGSV,EAAAK,EAAKsB,cAAAR,EAA0BM,OAAA7B,EAAA,EAAA6B,CAAQ,CAChDT,UAAeS,OAAAvB,EAAA,EAAAuB,CAAIX,EAAAgB,KAAAhB,EAAAiB,OAAAhB,GAAAW,GAAAZ,EAAAkB,cACnBxB,OACGgB,GAAAb,KA+DYsB,EAAA,EAAAR,OAAAtB,EAAA,EAAAsB,CArIR,SAAAS,GACP,OAEAJ,KAAA,CACAK,SAAA,WACAC,QAAA,OACAC,WAAA,SACAC,eAAA,SACAC,WAAA,EACAC,MAAA,GACAC,OAAA,GACAC,WAAAR,EAAAS,WAAAD,WACAE,SAAAV,EAAAS,WAAAE,QAAA,IACAC,aAAA,MACAC,SAAA,SACAC,WAAA,QAIAhB,aAAA,CACAiB,MAAAf,EAAAgB,QAAAC,WAAAC,QACAC,gBAAA,UAAAnB,EAAAgB,QAAAI,KAAApB,EAAAgB,QAAAK,KAAA,KAAArB,EAAAgB,QAAAK,KAAA,MAIA7B,IAAA,CACAc,MAAA,OACAC,OAAA,OACAe,UAAA,SAEAC,UAAA,WAuGyB,CACzBC,KAAA,aADe,CAEdtD,sCC7ID,IAAAR,EAAAC,EAAA,GAAA8D,EAAA9D,EAAA,IAAA+D,EAAA/D,EAAA,GAAAgE,EAAAhE,EAAA,IAAAiE,EAAAjE,EAAA,GAAAkE,EAAAlE,EAAAI,EAAA6D,GAAAE,EAAAnE,EAAA,IAAAoE,EAAApE,EAAAI,EAAA+D,GAAAE,GAAArE,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAsE,EAAAtE,EAAA,IAAAuE,EAAAvE,EAAA,IAAAwE,EAAAxE,EAAA,IAAAyE,EAAAzE,EAAA,KAAA0E,EAAA1E,EAAA,MAAA2E,EAAA3E,EAAA,IAAA4E,EAAA5E,EAAA,KA2feoC,EAAA,EAAAR,OAAA2C,EAAA,EAAA3C,CA1eR,SAAAS,GACP,OAEAwC,OAAA,CACAC,OAAAzC,EAAAyC,OAAAC,QACAC,cAAA,OACA1C,SAAA,WACA2C,IAAA,EACAC,KAAA,EACAC,MAAA,GAKAC,kBAAA,CACAJ,cAAA,QAIAD,QAAA,CACAvB,gBAAuB5B,OAAA0C,EAAA,EAAA1C,CAAIS,EAAAgB,QAAAK,KAAA,SAC3BT,aAAAZ,EAAAgD,MAAApC,aACAG,MAAAf,EAAAgB,QAAAiC,OAAAC,MACA1C,WAAAR,EAAAS,WAAAD,WACA2C,QAAA,UACAzC,SAAAV,EAAAS,WAAAE,QAAA,IACAyC,WAAA,GAAAC,OAAArD,EAAAS,WAAA6C,MAAA,WACAC,SAAA,IACAC,WAAAxD,EAAAS,WAAAgD,kBAIAC,MAAA,CACAP,QAAA,WACAzC,SAAAV,EAAAS,WAAAE,QAAA,IACAyC,WAAA,GAAAC,OAAArD,EAAAS,WAAA6C,MAAA,aACAE,WAAAxD,EAAAS,WAAAkD,mBAIAC,qBAA0BrE,OAAAoC,EAAA,EAAApC,CAAe,CACzCsE,gBAAA,eACAC,OAAA,WACK9D,EAAA+D,YAAAC,GAAA,OACLF,OAAA,WAIAG,sBAA2B1E,OAAAoC,EAAA,EAAApC,CAAe,CAC1CsE,gBAAA,cACAC,OAAA,UACK9D,EAAA+D,YAAAC,GAAA,OACLF,OAAA,WAIAI,oBAAyB3E,OAAAoC,EAAA,EAAApC,CAAe,CACxCsE,gBAAA,gBACAC,OAAA,UACK9D,EAAA+D,YAAAC,GAAA,OACLF,OAAA,WAIAK,uBAA4B5E,OAAAoC,EAAA,EAAApC,CAAe,CAC3CsE,gBAAA,aACAC,OAAA,UACK9D,EAAA+D,YAAAC,GAAA,OACLF,OAAA,aAsayB,CACzBtC,KAAA,aACA4C,WAAA,GAFe,CAjaf,SAAA/F,GACA,IAAAI,EAAAJ,EAAAI,SACAG,EAAAP,EAAAO,QACAyF,EAAAhG,EAAAiG,qBACAA,OAAA,IAAAD,KACAE,EAAAlG,EAAAmG,qBACAA,OAAA,IAAAD,KACAE,EAAApG,EAAAqG,qBACAA,OAAA,IAAAD,KACAE,EAAAtG,EAAAuG,WACAA,OAAA,IAAAD,EAAA,EAAAA,EACAE,EAAAxG,EAAAyG,gBACAA,OAAA,IAAAD,EAAA,IAAAA,EACAE,EAAA1G,EAAA0G,GACAC,EAAA3G,EAAA4G,YACAA,OAAA,IAAAD,KACAE,EAAA7G,EAAA8G,WACAA,OAAA,IAAAD,EAAA,EAAAA,EACAE,EAAA/G,EAAAgH,gBACAA,OAAA,IAAAD,EAAA,KAAAA,EACAE,EAAAjH,EAAAiH,QACAC,EAAAlH,EAAAkH,OACAC,EAAAnH,EAAAoH,KACAC,EAAArH,EAAAsH,UACAA,OAAA,IAAAD,EAAA,SAAAA,EACAE,EAAAvH,EAAAuH,YACA5F,EAAA3B,EAAA2B,MACA6F,EAAAxH,EAAAwH,MACAC,EAAAzH,EAAA0H,oBACAA,OAAA,IAAAD,EAA+D1D,EAAA,EAAI0D,EACnEE,EAAA3H,EAAA2H,gBACA1G,EAAcC,OAAAmC,EAAA,EAAAnC,CAAwBlB,EAAA,0RAEtC4H,EAAwBpE,EAAA1D,EAAK+H,UAAA,GAC7BC,EAAyB5G,OAAAkC,EAAA,EAAAlC,CAAc0G,EAAA,GACvCG,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAG,EAAyBzE,EAAA1D,EAAK+H,SAAA,GAE9BK,EADyBhH,OAAAkC,EAAA,EAAAlC,CAAc+G,EAAA,GACvC,GAEAE,EAAyB3E,EAAA1D,EAAK+H,WAC9BO,EAAyBlH,OAAAkC,EAAA,EAAAlC,CAAciH,EAAA,GACvCE,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAG,EAA6B/E,EAAA1D,EAAK0I,QAAA,GAGlCC,GADsBjF,EAAA1D,EAAK0I,OAAA,MAAArB,GAC3BuB,QAEAC,GAAkBnF,EAAA1D,EAAK0I,SACvBI,GAAmBpF,EAAA1D,EAAK0I,SACxBK,GAAmBrF,EAAA1D,EAAK0I,SACxBM,GAAmBtF,EAAA1D,EAAK0I,SACxBO,GAAmBvF,EAAA1D,EAAK0I,SACtBhF,EAAA1D,EAAKkJ,UAAA,aAEJ,CAAAP,GAAAjB,EAAAa,IACD7E,EAAA1D,EAAKkJ,UAAA,WAIPL,GAAAD,UACAC,GAAAD,QAAA,eAAA1D,OAAAiE,KAAAhE,MAAA,IAAAgE,KAAAC,YAIA/B,GACAe,EAAA,SAAAxI,GACA,OAAAA,KAGG,CAAAyH,IACD3D,EAAA1D,EAAKkJ,UAAA,WACP,kBACAG,aAAAP,GAAAF,SACAS,aAAAN,GAAAH,SACAS,aAAAL,GAAAJ,SACAS,aAAAJ,GAAAL,WAEG,IAEH,IAAAU,GAAA,SAAAC,GAIAZ,IAAAV,GACAC,GAAA,GAGAd,GACAA,EAAAmC,IAIAC,GAAA,SAAAD,GACA,IAAAE,EAAAnJ,EAAAJ,MAEA,cAAAqJ,EAAAtG,MAAAwG,EAAAC,aACAD,EAAAC,YAAAH,GAGAd,EAAAG,SAAA,eAAAW,EAAAtG,OAOAsF,GACAA,EAAAoB,gBAAA,SAGAN,aAAAN,GAAAH,SACAS,aAAAL,GAAAJ,SAEAnC,GACA8C,EAAAK,UACAb,GAAAH,QAAAiB,WAAA,WACAP,GAAAC,IACO9C,IAEP6C,GAAAC,KAIAO,GAA2B1I,OAAAgD,EAAA,EAAAhD,GAC3B2I,GAAAD,GAAAC,eACAC,GAAAF,GAAAE,cACAC,GAAAH,GAAA3J,IAEA+J,GAAyBxG,EAAA1D,EAAK+H,UAAA,GAC9BoC,GAAyB/I,OAAAkC,EAAA,EAAAlC,CAAc8I,GAAA,GACvCE,GAAAD,GAAA,GACAE,GAAAF,GAAA,GA6BAG,GAAA,SAAAf,GACAZ,IACAT,GAAA,GAGAf,GACAA,EAAAoC,GAGAF,aAAAP,GAAAF,SACAE,GAAAF,QAAAiB,WAAA,WACApB,EAAAG,SAAA,GACK/G,EAAA0I,YAAAC,SAAAC,WAGLC,GAAA,SAAAnB,GACA,IAAAE,EAAAnJ,EAAAJ,MAEA,SAAAqJ,EAAAtG,OACAwG,EAAAkB,QACAlB,EAAAkB,OAAApB,GA9CAa,KACAC,IAAA,GACAL,OAkDA,eAAAT,EAAAtG,MAAAwG,EAAAmB,cACAnB,EAAAmB,aAAArB,GAGAF,aAAAN,GAAAH,SACAS,aAAAL,GAAAJ,SAEA5B,GACAuC,EAAAK,UACAZ,GAAAJ,QAAAiB,WAAA,WACAS,GAAAf,IACOvC,IAEPsD,GAAAf,IAmCAsB,GAAqBzJ,OAAA+C,EAAA,EAAA/C,CAAWsC,EAAA1D,EAAK8K,YAAA,SAAAC,GAErCvC,EAAiB5E,EAAA5D,EAAQgL,YAAAD,KACtB,IAAAd,IACHgB,GAAkB7J,OAAA+C,EAAA,EAAA/C,CAAUd,EAAAH,IAAA0K,IAC5BvD,GAAAqB,GAAAtB,EAAAY,EAEA,KAAAP,IACAJ,IAAA,GAQA,IAAA4D,IAAA5D,KAAAjB,EAEAoD,GAAsBrI,OAAA7B,EAAA,EAAA6B,CAAQ,CAC9B+J,mBAAA7D,GAAAV,GAAAiC,GAAAD,QAAA,KACAlB,MAAAwD,IAAA,kBAAAxD,IAAA,MACGvG,EAAA,GAAWb,EAAAJ,MAAA,CACdS,UAAeS,OAAAyC,EAAA,EAAAzC,CAAID,EAAAR,UAAAL,EAAAJ,MAAAS,aAGnB4F,IACAkD,GAAA2B,aAzDA,SAAA7B,GACAd,EAAAG,SAAA,EACA,IAAAa,EAAAnJ,EAAAJ,MAEAuJ,EAAA2B,cACA3B,EAAA2B,aAAA7B,GAGAF,aAAAL,GAAAJ,SACAS,aAAAP,GAAAF,SACAS,aAAAJ,GAAAL,SACAW,EAAAK,UACAX,GAAAL,QAAAiB,WAAA,WACAL,GAAAD,IACK5C,IA4CL8C,GAAA4B,WAzCA,SAAA9B,GACAjJ,EAAAJ,MAAAmL,YACA/K,EAAAJ,MAAAmL,WAAA9B,GAGAF,aAAAJ,GAAAL,SACAS,aAAAL,GAAAJ,SACAW,EAAAK,UACAZ,GAAAJ,QAAAiB,WAAA,WACAS,GAAAf,IACKrC,KAkCLb,IACAoD,GAAAC,YAAAF,GACAC,GAAAmB,aAAAF,IAGAvE,IACAsD,GAAA6B,QAlIA,SAAA/B,GAIAhB,GACAC,EAAAe,EAAAgC,eAGAxB,GAAAR,KACAc,IAAA,GACAb,GAAAD,IAGA,IAAAE,EAAAnJ,EAAAJ,MAEAuJ,EAAA6B,SACA7B,EAAA6B,QAAA/B,IAmHAE,GAAAkB,OAAAD,IAGA,IAAAc,GAAA1E,EAAA,CACA4C,YAAAD,GAAAC,YACAkB,aAAAnB,GAAAmB,aACAU,QAAA7B,GAAA6B,QACAX,OAAAlB,GAAAkB,QACG,GAEH,OAASjH,EAAA1D,EAAKsB,cAAeoC,EAAA1D,EAAKyL,SAAA,KAAiB/H,EAAA1D,EAAKwB,aAAAlB,EAAwBc,OAAA7B,EAAA,EAAA6B,CAAQ,CACxFjB,IAAA8K,IACGxB,KAAmB/F,EAAA1D,EAAKsB,cAAe4C,EAAA,EAAQ9C,OAAA7B,EAAA,EAAA6B,CAAQ,CAC1DT,UAAeS,OAAAyC,EAAA,EAAAzC,CAAIX,EAAA4D,OAAAyC,GAAArG,EAAAmE,mBACnB4C,YACAkE,SAAAnD,EACAjB,OAAAiB,GAAAjB,GACAV,GAAA6C,GAAA,oBACAkC,YAAA,GACGH,GAAA/D,GAAA,SAAAmE,GACH,IAAAC,EAAAD,EAAApE,UACAsE,EAAAF,EAAA/D,gBACA,OAAWnE,EAAA1D,EAAKsB,cAAAsG,EAAoCxG,OAAA7B,EAAA,EAAA6B,CAAQ,CAC5D2K,QAAAlK,EAAA0I,YAAAC,SAAAwB,SACKF,EAAAjE,GAA0CnE,EAAA1D,EAAKsB,cAAA,OACpDX,UAAiBS,OAAAyC,EAAA,EAAAzC,CAAIX,EAAA8D,QAAA9D,EAAA,mBAAAyE,OAAoD9D,OAAA4C,EAAA,EAAA5C,CAAUyK,EAAAI,MAAA,WAAAxD,EAAAG,SAAAnI,EAAA8E,QAC9EmC,4CCxYL,IAAAnI,EAAAC,EAAA,GAAAC,EAAAD,EAAA,GAAAE,EAAAF,EAAA,GAAAG,EAAAH,EAAAI,EAAAF,GAAAG,GAAAL,EAAA,GAAAA,EAAA,IAAA0M,GAAA1M,EAAA,IAAAA,EAAA,MAAA2M,EAAA3M,EAAA,IAAA4M,EAAA5M,EAAA,KA+CA6M,EAAqB1M,EAAAK,EAAKC,WAAA,SAAAC,EAAAC,GAC1B,IAAAG,EAAAJ,EAAAI,SACAG,EAAAP,EAAAO,QACAE,EAAAT,EAAAS,UACAC,EAAAV,EAAAW,UACAC,OAAA,IAAAF,EAAA,MAAAA,EACA0L,EAAApM,EAAAqM,qBACAA,OAAA,IAAAD,KACAE,EAAAtM,EAAAuM,kBACAA,OAAA,IAAAD,KACA1K,EAAA5B,EAAA4B,SACA4K,EAAAxM,EAAAyM,QACAxL,EAAcC,OAAA3B,EAAA,EAAA2B,CAAwBlB,EAAA,gHAEtC0M,EAAuBxL,OAAAgL,EAAA,EAAAhL,IAAc,GACrCuL,EAAAD,EAUA,OARAA,GAAAE,EAAAD,QAIAC,IAAAD,IACAA,EAAAC,EAAAD,SAGShN,EAAAK,EAAKsB,cAAe8K,EAAA,EAAkBS,SAAA,CAC/CC,MAAA,MACKnN,EAAAK,EAAKsB,cAAAR,EAA0BM,OAAA7B,EAAA,EAAA6B,CAAQ,CAC5CT,UAAeS,OAAAvB,EAAA,EAAAuB,CAAIX,EAAAgB,KAAAd,EAAA4L,GAAA9L,EAAA8L,qBAAAK,EAAAG,aAAAtM,EAAAsM,YAAA,CACnBC,OAAAvM,EAAAuM,QACKL,GAAA,CACLM,MAAAxM,EAAAyM,cACAC,IAAA1M,EAAA2M,aACKtL,GAAA,CACLuL,MAAA5M,EAAA6M,aACKV,EAAAjH,SACLxF,OACGgB,GAAA,kBAAAb,GAAAmM,EAEAnM,EAF+DX,EAAAK,EAAKsB,cAAe4K,EAAA,EAAU,CAChGtJ,MAAA,iBACGtC,OAqDYsB,EAAA,EAAAR,OAAA+K,EAAA,EAAA/K,CAlIR,CAEPK,KAAA,CACAM,QAAA,OACAK,OAAA,SAEAmL,UAAA,MACAvL,WAAA,UAIAgL,OAAA,CACAQ,oCAAA,CACAC,UAAA,KAKAP,cAAA,CACAQ,YAAA,GAIAN,YAAA,CACAO,WAAA,GAIApB,qBAAA,CACA/H,cAAA,QAIAuI,YAAA,GAGAO,YAAA,IA8FyB,CACzBjK,KAAA,qBADe,CAEdgJ,0VCrHKuB,6MAEJC,MAAQ,CACNjH,GAAI,GACJc,MAAO,GACPoG,YAAa,GACbC,YAAa,GACbC,YAAY,EACZC,iBAAiB,KAGnBC,YAAc,WACRC,EAAKC,sBACPC,OAAOC,oBAAoB,SAAUH,EAAKC,sBAC5CD,EAAKjO,MAAMoK,iBAGbiE,eAAiB,SAAAC,GACfL,EAAKM,SAAS,CAAED,kBAGlBE,kBAAoB,SAAAC,GAAS,IAAAC,EACAT,EAAKN,MAA1BgB,mBADqB,IAAAD,EACP,GADOA,EAE3BC,EAAYC,OAAOH,EAAO,GAC1BR,EAAKM,SAAS,CAAEI,mBAGlBE,aAAe,SAAAxF,GACb4E,EAAKM,SAAS,CAAER,iBAAiB,IAEjC,IAAIe,EAASzF,EAAMyF,OACfpI,EAAKoI,EAAOlC,MAEhB,GAAoB,WAAhBkC,EAAO3L,KAAmB,KAAA4L,EACQd,EAAKN,MAAnCqB,EADsBD,EACtBC,YACFC,EAFwBF,EACTG,aACOC,KAAK,SAAAC,GAAI,OAAIA,EAAK1I,KAAOA,IAE9CoI,EAAOO,SAIVL,EAAYM,KAAKL,GACjBhB,EAAKM,SAAS,CAAES,kBAJhBA,EAAYJ,OAAOI,EAAYO,QAAQN,GAAS,GAChDhB,EAAKM,SAAS,CAAES,sBAKb,GAAoB,UAAhBF,EAAO3L,KAAkB,KAAAqM,EACNvB,EAAKN,MAA3B8B,EAD4BD,EAC5BC,OACFC,EAF8BF,EACpBG,UACQR,KAAK,SAAAS,GAAI,OAAIA,EAAKlJ,KAAOmJ,SAASnJ,KAEnDoI,EAAOO,SAIVI,EAAOH,KAAKI,GACZzB,EAAKM,SAAS,CAAEkB,aAJhBA,EAAOb,OAAOa,EAAOF,QAAQG,GAAQ,GACrCzB,EAAKM,SAAS,CAAEkB,gBAMJ,UAAdpG,EAAMyG,KACLzG,EAAM0G,UACS,gBAAhBjB,EAAO3L,KAOP8K,EAAKM,SAALrN,OAAA8O,EAAA,EAAA9O,CAAA,GACGmI,EAAMyF,OAAO3L,KAAOkG,EAAMyF,OAAOlC,SANpCqB,EAAKM,SAALrN,OAAA8O,EAAA,EAAA9O,CAAA,GACGmI,EAAMyF,OAAO3L,KAAOkG,EAAMyF,OAAOlC,QAEpCqB,EAAKgC,kBAQTC,WAAa,WAAM,IAAAC,EAYblC,EAAKN,MAVPjH,EAFeyJ,EAEfzJ,GACAc,EAHe2I,EAGf3I,MACA8G,EAJe6B,EAIf7B,WAJe8B,EAAAD,EAKfnB,mBALe,IAAAoB,EAKD,GALCA,EAAAC,EAAAF,EAMfV,cANe,IAAAY,EAMN,GANMA,EAOfzC,EAPeuC,EAOfvC,YAPe0C,EAAAH,EAQfxB,mBARe,IAAA2B,EAQD,GARCA,EAAAC,EAAAJ,EASfK,gBATe,IAAAD,EASJ,GATIA,EAUfE,EAVeN,EAUfM,OACAC,EAXeP,EAWfO,QAGEC,EAAO,CACTjK,KACAc,QACA8G,aACAsC,QAAS5B,EAAY6B,IAAI,SAAA5B,GAAM,OAAIA,EAAOvI,KAC1C+I,OAAQA,EAAOoB,IAAI,SAAAjB,GAAI,OAAIA,EAAKlJ,KAChCkH,cACAe,cACA6B,YAEFvC,EAAKjO,MAAM8Q,iBAAiBJ,EAASD,EAAQE,GAC7C1C,EAAKD,iBAGPiC,YAAc,WAAM,IAAAc,EACoB9C,EAAKN,MAArC6C,EADYO,EACZP,SAAUpB,EADE2B,EACF3B,KAAMvB,EADJkD,EACIlD,YAEK,KAAvBA,EAAYmD,QACdR,EAASlB,KAAK,CACZ5I,GAAIuK,cACJC,IAAK9B,EAAK+B,OACVC,KAAMvD,EAAYmD,OAClBK,KAAM,IAAIC,OAEdrD,EAAKM,SAAS,CAAEiC,WAAU3C,YAAa,yFA0CrB,IAAA0D,EAAAC,KACdrD,OAAOsD,WAAa,KACtBD,KAAKjD,SAAS,CAAET,YAAY,IAE1BK,SACFqD,KAAKtD,qBAAuBC,OAAOuD,iBAAiB,SAAU,SAAArI,GACxDA,EAAMyF,OAAO2C,WAAa,IAC5BF,EAAKhD,SAAS,CAAET,YAAY,IACvByD,EAAKhD,SAAS,CAAET,YAAY,sDAKnC0D,KAAKtD,sBACPC,OAAOC,oBAAoB,SAAUoD,KAAKtD,uDAGrC,IAAAyD,EAAAH,KAAAI,EACoBJ,KAAKxR,MAA1BoH,EADCwK,EACDxK,KAAMyK,EADLD,EACKC,WADLC,EAcHN,KAAK7D,MAXPG,EAHKgE,EAGLhE,WACAtG,EAJKsK,EAILtK,MAJKuK,EAAAD,EAKL9C,mBALK,IAAA+C,EAKS,GALTA,EAAAC,EAAAF,EAML5C,oBANK,IAAA8C,EAMU,GANVA,EAAAC,EAAAH,EAOLrC,cAPK,IAAAwC,EAOI,GAPJA,EAAAC,EAAAJ,EAQLnC,iBARK,IAAAuC,EAQO,GARPA,EASLtE,EATKkE,EASLlE,YATKuE,EAAAL,EAULnD,mBAVK,IAAAwD,EAUS,GAVTA,EAAAC,EAAAN,EAWLtB,gBAXK,IAAA4B,EAWM,GAXNA,EAYLhD,EAZK0C,EAYL1C,KACAvB,EAbKiE,EAaLjE,YAGF,OACEwE,EAAAvS,EAAAsB,cAACkR,EAAA,EAAD,CACErL,QAASuK,KAAKxD,YACd5G,KAAMA,EACN0G,WAAYA,EACZyE,WAAW,EACXC,OAAO,QAEPH,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,eACb4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,qBACb4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,oBACb4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,gCACb4R,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,CAAMhS,UAAU,cAAhB,cACA4R,EAAAvS,EAAAsB,cAACsR,EAAA,EAAD,CACEC,MAAO,CACLtQ,SAAU,OACV8C,WAAY,KAEd1E,UAAU,mCACVsC,KAAK,OACL6P,WAAS,EACTzP,KAAK,QACL0P,SAAUrB,KAAK3C,aACfiE,kBAAkB,EAClBlG,MAAOpF,KAGX6K,EAAAvS,EAAAsB,cAAC2R,EAAA,EAAD,CAAYC,KAAK,QAAQC,QAASzB,KAAKxD,aACrCqE,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,gBAIJJ,EAAAvS,EAAAsB,cAAA,KAAGX,UAAU,yCAAb,kCAIA4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,iDACb4R,EAAAvS,EAAAsB,cAAA,WACEiR,EAAAvS,EAAAsB,cAAA,MAAIX,UAAU,iCAAd,eACA4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,wCACZuO,EAAY6B,IAAI,SAAA5B,GAAM,OACrBoD,EAAAvS,EAAAsB,cAACvB,EAAA,EAAD,CACEiQ,IAAKb,EAAOvI,GACZjG,UAAU,SACVM,IAAKkO,EAAOiE,WAGhBb,EAAAvS,EAAAsB,cAAC+R,EAAA,EAAD,CACEC,mBAAmB,SACnBC,wBAAwB,EACxBC,WACEjB,EAAAvS,EAAAsB,cAACmS,EAAA,EAAD,CAAS/L,MAAO,MAAOnF,SAAS,SAC9BgQ,EAAAvS,EAAAsB,cAACvB,EAAA,EAAD,CAAQY,UAAU,gCAAlB,OAMHyO,EAAa2B,IAAI,SAAAzB,GAAI,OACpBiD,EAAAvS,EAAAsB,cAACoS,EAAA,EAAD,CACE/S,UAAU,OACVqP,IAAKV,EAAK1I,GACV+M,QACEpB,EAAAvS,EAAAsB,cAACsS,EAAA,EAAD,CACEvQ,KAAK,SACLkM,QAASL,EAAY2E,KACnB,SAAA1E,GAAM,OAAIA,EAAOvI,KAAO0I,EAAK1I,KAE/BmM,SAAUlB,EAAK9C,aACfjC,MAAOwC,EAAK1I,KAGhBgJ,MACE2C,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,oBACb4R,EAAAvS,EAAAsB,cAACvB,EAAA,EAAD,CACEkB,IAAKqO,EAAK8D,OACVzS,UAAU,YAEZ4R,EAAAvS,EAAAsB,cAAA,QAAMX,UAAU,SAAS2O,EAAKjM,cAQ5CkP,EAAAvS,EAAAsB,cAAA,WACEiR,EAAAvS,EAAAsB,cAAA,MAAIX,UAAU,iCAAd,UACA4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,gBACZgP,EAAOoB,IAAI,SAAAnB,GAAK,OACf2C,EAAAvS,EAAAsB,cAACwS,EAAA,EAAD,CACE9D,IAAKJ,EAAMhJ,GACXsM,KAAK,QACLvG,QAAQ,YACRhM,UAAS,4CAAAuE,OAA8C0K,EAAMhN,QAE5DgN,EAAMlI,SAGX6K,EAAAvS,EAAAsB,cAAC+R,EAAA,EAAD,CACEC,mBAAmB,QACnBC,wBAAwB,EACxBC,WACEjB,EAAAvS,EAAAsB,cAACmS,EAAA,EAAD,CAAS/L,MAAO,MAAOnF,SAAS,SAC9BgQ,EAAAvS,EAAAsB,cAACwS,EAAA,EAAD,CAAQnT,UAAU,gBAAgBuS,KAAK,SAAvC,OAMHrD,EAAUkB,IAAI,SAAAnB,GAAK,OAClB2C,EAAAvS,EAAAsB,cAACoS,EAAA,EAAD,CACE/S,UAAU,OACVqP,IAAKJ,EAAMhJ,GACX+M,QACEpB,EAAAvS,EAAAsB,cAACsS,EAAA,EAAD,CACErE,QAASI,EAAOkE,KAAK,SAAA/D,GAAI,OAAIA,EAAKlJ,KAAOgJ,EAAMhJ,KAC/CmM,SAAUlB,EAAK9C,aACfjC,MAAO8C,EAAMhJ,GACbvD,KAAK,UAGTuM,MACE2C,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,oBACb4R,EAAAvS,EAAAsB,cAAA,OACEX,UAAS,8BAAAuE,OAAgC0K,EAAMhN,SAEjD2P,EAAAvS,EAAAsB,cAAA,QAAMX,UAAU,SAASiP,EAAMlI,iBAWjD6K,EAAAvS,EAAAsB,cAACyS,EAAA,EAAD,MAEAxB,EAAAvS,EAAAsB,cAAC0S,EAAAhU,EAAD,CACEW,UAAU,gCACVkS,MAAO,CAAEtF,UAAW,SAEpBgF,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,kBACb4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,yBACb4R,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,CAAMhS,UAAU,cAAhB,eACA4R,EAAAvS,EAAAsB,cAAA,MAAIX,UAAU,kCAAd,gBAEF4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,oBACb4R,EAAAvS,EAAAsB,cAAC2S,EAAA,EAAD,CACEtT,UAAU,aACVoS,SAAUrB,KAAK3C,aACf1L,KAAK,cACLyJ,MAAOgB,EACPnB,QAAQ,WACR8F,WAAS,EACTyB,WAAS,KAIb3B,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,6CACb4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,oBACb4R,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,CAAMhS,UAAU,cAAhB,eACA4R,EAAAvS,EAAAsB,cAAA,MAAIX,UAAU,kCAAd,gBAKF4R,EAAAvS,EAAAsB,cAAA,SAAO6S,QAAQ,eACb5B,EAAAvS,EAAAsB,cAACwS,EAAA,EAAD,CACEnT,UAAU,yCACVE,UAAU,QAFZ,wBAOF0R,EAAAvS,EAAAsB,cAAA,SACEX,UAAU,eACViG,GAAG,cACH3D,KAAK,OACLmR,UAAQ,KAIZ7B,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,eACb4R,EAAAvS,EAAAsB,cAAC+S,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACtB1F,EAAYkC,IAAI,SAACyD,EAAM5N,GAAP,OACf2L,EAAAvS,EAAAsB,cAAC+S,EAAA,EAAD,CAAMrE,IAAKpJ,EAAIkJ,MAAI,EAAC2E,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC5CrC,EAAAvS,EAAAsB,cAACuT,EAAA,EAAD,CACElU,UAAU,wCACVmU,UAAW,GAEXvC,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,oCACb4R,EAAAvS,EAAAsB,cAAA,OAAKL,IAAKuT,EAAKO,IAAK3U,IAAI,uBAE1BmS,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,SACb4R,EAAAvS,EAAAsB,cAAA,MAAIX,UAAU,6BACX6T,EAAKnR,MAERkP,EAAAvS,EAAAsB,cAAA,SAAOX,UAAU,oCACd6T,EAAKtB,OAGVX,EAAAvS,EAAAsB,cAAC+R,EAAA,EAAD,CACEC,mBAAmB,SACnBE,WACEjB,EAAAvS,EAAAsB,cAAC2R,EAAA,EAAD,CAAYtS,UAAU,SACpB4R,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,oBAIJJ,EAAAvS,EAAAsB,cAAC0T,EAAA,EAAD,CACErU,UAAU,mBACVwS,QAAS,kBAAMtB,EAAKtD,eAAeiG,EAAKO,MACxClC,MAAO,CAAEoC,SAAU,MAEnB1C,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,uBACAJ,EAAAvS,EAAAsB,cAAA,QAAMX,UAAU,SAAhB,iBAEF4R,EAAAvS,EAAAsB,cAAC0T,EAAA,EAAD,CACE7B,QAAS,kBAAMtB,EAAKnD,kBAAkB9H,IACtCjG,UAAU,mBACVkS,MAAO,CAAEoC,SAAU,MAEnB1C,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,iBACAJ,EAAAvS,EAAAsB,cAAA,QAAMX,UAAU,SAAhB,qBAUhB4R,EAAAvS,EAAAsB,cAACyS,EAAA,EAAD,CAASpT,UAAU,UAEnB4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,YACb4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,0BACb4R,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,CAAMhS,UAAU,cAAhB,WACA4R,EAAAvS,EAAAsB,cAAA,MAAIX,UAAU,kCAAd,aAEF4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,kBACZ+P,EAASK,IAAI,SAAAmE,GACZ,IAAI5F,EAAOyC,EAAW1C,KAAK,SAAAC,GAAI,OAAIA,EAAK1I,KAAOsO,EAAQ9D,MACvD,OACEmB,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,QAAQqP,IAAKkF,EAAQtO,IAClC2L,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,yBACb4R,EAAAvS,EAAAsB,cAACvB,EAAA,EAAD,CAAQY,UAAU,iBAAiBM,IAAKqO,EAAK8D,SAC7Cb,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,SACb4R,EAAAvS,EAAAsB,cAAA,MAAIX,UAAU,OAAO2O,EAAKjM,MAC1BkP,EAAAvS,EAAAsB,cAAA,aACG6T,YAAkB,IAAI3D,KAAK0D,EAAQ3D,OADtC,UAKJgB,EAAAvS,EAAAsB,cAAA,KAAGX,UAAU,kBAAkBuU,EAAQ5D,SAK7CiB,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,0BACb4R,EAAAvS,EAAAsB,cAACvB,EAAA,EAAD,CAAQY,UAAU,iBAAiBM,IAAKqO,EAAK8F,WAC7C7C,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,oBACb4R,EAAAvS,EAAAsB,cAAC2S,EAAA,EAAD,CACEtT,UAAU,mBACVoS,SAAUrB,KAAK3C,aACfsG,UAAW3D,KAAK3C,aAChBpC,QAAQ,WACRtJ,KAAK,cACLyJ,MAAOiB,EACP0E,WAAS,EACT6C,WAAY,CACVzC,MAAO,CACL7N,QAAS,YAKjBuN,EAAAvS,EAAAsB,cAACwS,EAAA,EAAD,CAAQX,QAASzB,KAAKvB,aAAtB,YAMRoC,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,gCACb4R,EAAAvS,EAAAsB,cAACwS,EAAA,EAAD,CAAQnT,UAAU,QAAQwS,QAASzB,KAAKxD,aAAxC,UAGAqE,EAAAvS,EAAAsB,cAACwS,EAAA,EAAD,CACEX,QAASzB,KAAKtB,WACdzD,QAAQ,YACR/J,MAAM,WAHR,8DA1WsB2S,EAAWC,GACzC,IAAKA,EAAUvH,sBAAiDwH,IAA9BD,EAAUvH,gBAC1C,MAAO,GAF2C,IAKlD4C,EAKE0E,EALF1E,KALkD6E,EAUhDH,EAJFxD,kBANkD,IAAA2D,EAMrC,GANqCA,EAAAC,EAUhDJ,EAHF1F,iBAPkD,IAAA8F,EAOtC,GAPsCA,EAQlDC,EAEEL,EAFFK,MACAtG,EACEiG,EADFjG,KATkDuG,EAehDhF,EAFFC,eAbkD,IAAA+E,EAaxC,GAbwCA,EAAAC,EAehDjF,EADFlB,cAdkD,IAAAmG,EAczC,GAdyCA,EAiBhD5G,EAAc4B,EAAQC,IAAI,SAAAgF,GAAa,OACzChE,EAAW1C,KAAK,SAAAF,GAAM,OAAIA,EAAOvI,KAAOmP,MAEtCC,EAAoBrG,EAAOoB,IAAI,SAAAkF,GAAO,OACxCpG,EAAUR,KAAK,SAAAO,GAAK,OAAIA,EAAMhJ,KAAOqP,MAEnC7G,EAAewG,EAAM9E,QAAQC,IAAI,SAAAmF,GAAW,OAC9CnE,EAAW1C,KAAK,SAAAF,GAAM,OAAIA,EAAOvI,KAAOsP,EAAYtP,OAGtD,OAAOxF,OAAA+U,EAAA,EAAA/U,CAAA,GACFyP,EADL,CAEED,QAASgF,EAAMhP,GACfsI,cACAE,eACAO,OAAOvO,OAAAgV,EAAA,EAAAhV,CAAK4U,GACZnG,YACAP,OACArB,iBAAiB,WAnJQnN,aAgfhBuV,cARS,SAAAxI,GAAK,MAAK,CAChCmD,iBAAkBsF,IAAUC,KAAKC,WACjCZ,MAAO/H,EAAM4I,WAAWb,MACxB7D,WAAYlE,EAAM4I,WAAW1E,WAC7BlC,UAAWhC,EAAM4I,WAAW5G,UAC5BP,KAAMzB,EAAMyB,OAKZ,CAAE0B,sBAFWqF,CAGbzI,uBC1fa8I,EAfY,SAAA9K,GAA2B,IAAA+K,EAAA/K,EAAxBhJ,aAAwB,IAAA+T,EAAhB,UAAgBA,EACpD,OACEpE,EAAAvS,EAAAsB,cAAA,OACEX,UAAS,MAAAuE,OAAQtC,GACjBiQ,MAAO,CACL1Q,MAAO,OACPC,OAAQ,MACRK,aAAc,MACdC,SAAU,SACVgL,YAAa,UCoFN2I,cALS,SAAAxI,GAAK,MAAK,CAChCkE,WAAYlE,EAAM4I,WAAW1E,WAC7BlC,UAAWhC,EAAM4I,WAAW5G,YAK5B,GAFawG,CA1FQ,SAAAzK,GAIjB,IAHJiF,EAGIjF,EAHJiF,KAGI+F,EAAAhL,EAFJmG,kBAEI,IAAA6E,EAFS,GAETA,EAAAC,EAAAjL,EADJiE,iBACI,IAAAgH,EADQ,GACRA,EAEFnP,EAMEmJ,EANFnJ,MAFEmO,EAQAhF,EALFC,eAHE,IAAA+E,EAGQ,GAHRA,EAAAC,EAQAjF,EAJFlB,cAJE,IAAAmG,EAIO,GAJPA,EAKFtH,EAGEqC,EAHFrC,WACAK,EAEEgC,EAFFhC,YACA6B,EACEG,EADFH,SAGEoG,EAAyBhG,EAAQC,IAAI,SAAAgF,GAAa,OACpDhE,EAAW1C,KAAK,SAAAF,GAAM,OAAIA,EAAOvI,KAAOmP,MAEtCC,EAAoBrG,EAAOoB,IAAI,SAAAkF,GAAO,OACxCpG,EAAUR,KAAK,SAAAO,GAAK,OAAIA,EAAMhJ,KAAOqP,MAGvC,OACE1D,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,oBACZ6N,GACC+D,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,kBAAkBM,IAAKuN,EAAYpO,IAAI,UAExDmS,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,eACiB,IAA7BqV,EAAkBe,QACjBxE,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,8BACZqV,EAAkBjF,IACjB,SAAAnB,GAAK,OACHA,GACE2C,EAAAvS,EAAAsB,cAAC0V,EAAD,CACEhH,IAAKJ,EAAMhJ,GACXhE,MAAOgN,EAAMhN,WAOzB2P,EAAAvS,EAAAsB,cAAA,MAAIX,UAAU,uBAAuB+G,IAEf,IAApBgJ,EAASqG,QACc,IAAvBlI,EAAYkI,QACO,IAAnBjG,EAAQiG,SACRxE,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,qEACb4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,QACQ,IAApB+P,EAASqG,QACRxE,EAAAvS,EAAAsB,cAACwS,EAAA,EAAD,CAAQZ,KAAK,SACXX,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,CAAMhS,UAAU,kBAAkB4B,SAAS,SAA3C,QAGAgQ,EAAAvS,EAAAsB,cAAA,YAAOoP,EAASqG,SAGI,IAAvBlI,EAAYkI,QACXxE,EAAAvS,EAAAsB,cAACwS,EAAA,EAAD,CAAQZ,KAAK,SACXX,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,CAAMhS,UAAU,kBAAkB4B,SAAS,SAA3C,eAGAgQ,EAAAvS,EAAAsB,cAAA,YAAOuN,EAAYkI,UAIzBxE,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,qCACZmW,EAAuB/F,IACtB,SAAA5B,GAAM,OACJA,GACEoD,EAAAvS,EAAAsB,cAACvB,EAAA,EAAD,CACEiQ,IAAKb,EAAOvI,GACZjG,UAAU,SACVM,IAAKkO,EAAOiE,iBCtD5B6D,6MACJpJ,MAAQ,CACNqJ,uBAAuB,EACvBC,mBAAmB,EACnBC,cAAe,GACfC,gBAAiB,MAGnBtI,aAAe,SAAAxF,GACK,UAAdA,EAAMyG,KAAoBzG,EAAM0G,SAM7B9B,EAAKM,SAALrN,OAAA8O,EAAA,EAAA9O,CAAA,GAAiBmI,EAAMyF,OAAO3L,KAAOkG,EAAMyF,OAAOlC,QAL7B,kBAAtBvD,EAAMyF,OAAO3L,KACf8K,EAAKmJ,mBAELnJ,EAAKoJ,sBAKXA,iBAAmB,WACjBpJ,EAAKjO,MAAMsX,kBAAkB,CAC3B5G,QAASzC,EAAKjO,MAAM0V,MAAMhP,GAC1B+J,OAAQxC,EAAKjO,MAAMuX,KAAKC,OAAO9Q,GAC/B+Q,UAAWxJ,EAAKN,MAAMwJ,kBAExBlJ,EAAKyJ,iBAAgB,MAGvBA,gBAAkB,SAAA9K,GAChBqB,EAAKM,SAAS,CAAEyI,sBAAuBpK,OAGzC+K,YAAc,SAAA/K,GACZqB,EAAKM,SAAS,CAAE0I,kBAAmBrK,OAGrCwK,iBAAmB,WAEY,KADLnJ,EAAKN,MAAvBuJ,cACYlG,SAChB/C,EAAKjO,MAAM4X,iBAAiB,CAC1BlH,QAASzC,EAAKjO,MAAM0V,MAAMhP,GAC1B+J,OAAQxC,EAAKjO,MAAMuX,KAAKC,OAAO9Q,GAC/BmR,UAAW5J,EAAKN,MAAMuJ,gBAExBjJ,EAAKM,SAAS,CAAE2I,cAAe,SAInCY,iBAAmB,WACjB7J,EAAKjO,MAAM+X,oBAAoB,CAC7BrH,QAASzC,EAAKjO,MAAM0V,MAAMhP,GAC1B+J,OAAQxC,EAAKjO,MAAMuX,KAAKC,OAAO9Q,8EAI1B,IAAA6K,EAAAC,KAAAwG,EAC8BxG,KAAKxR,MAAMuX,KAA1CU,EADCD,EACDC,SAAUC,EADTF,EACSE,SAAUV,EADnBQ,EACmBR,OADnBzI,EAMHyC,KAAK7D,MAHPsJ,EAHKlI,EAGLkI,kBACAD,EAJKjI,EAILiI,sBACAE,EALKnI,EAKLmI,cAEIiB,EAAoB3G,KAAKxR,MAAzBmY,gBAEN,OACE9F,EAAAvS,EAAAsB,cAACuT,EAAA,EAADzT,OAAAkX,OAAA,CACE3X,UAAU,qCACVmU,UAAWsD,EAASG,WAAa,GAAK,EACtCpY,IAAKgY,EAASK,UACVL,EAASM,eACTN,EAASO,gBALf,CAME7F,MAAKzR,OAAA+U,EAAA,EAAA/U,CAAA,CACH6T,SAAU,QACV7P,SAAU,SACP+S,EAASM,eAAe5F,SAG7BN,EAAAvS,EAAAsB,cAACqX,EAAA,EAAD,CAAWC,YAAalB,EAAO9Q,GAAIiS,UAAU,WAAW5V,KAAK,QAC1D,SAACkV,EAAUC,GAAX,OACC7F,EAAAvS,EAAAsB,cAAA,OAAKnB,IAAKgY,EAASK,SAAU7X,UAAU,2BACrC4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,4CACZuW,EACC3E,EAAAvS,EAAAsB,cAACwX,EAAA,EAAD,CACEC,YAAa,kBAAMtH,EAAKmG,iBAAgB,KAExCrF,EAAAvS,EAAAsB,cAAC2S,EAAA,EAAD,CACEtH,QAAQ,WACRqM,aAActB,EAAOhQ,MACrBqL,SAAUtB,EAAK1C,aACfsG,UAAW5D,EAAK1C,aAChB1L,KAAK,kBACL4V,WAAY,CACVC,aACE3G,EAAAvS,EAAAsB,cAAC+K,EAAA,EAAD,CAAgBvK,SAAS,OACvByQ,EAAAvS,EAAAsB,cAAC2R,EAAA,EAAD,CACEC,KAAK,QACLC,QAAS1B,EAAK8F,kBAEdhF,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,CAAMpQ,SAAS,SAAf,WAKR+S,WAAY,CACVzC,MAAO,CACL7N,QAAS,YAMjBuN,EAAAvS,EAAAsB,cAAA,MACEX,UAAU,kCACVwS,QAAS,kBAAM1B,EAAKmG,iBAAgB,KAEnCF,EAAOhQ,OAGZ6K,EAAAvS,EAAAsB,cAAC+R,EAAA,EAAD,CACEC,mBAAmB,QACnBE,WACEjB,EAAAvS,EAAAsB,cAAC2R,EAAA,EAAD,KACEV,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,oBAIJJ,EAAAvS,EAAAsB,cAAC0T,EAAA,EAAD,CACErU,UAAU,mBACVkS,MAAO,CAAEoC,SAAU,MAEnB1C,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,mBACAJ,EAAAvS,EAAAsB,cAAA,QAAMX,UAAU,SAAhB,eAEF4R,EAAAvS,EAAAsB,cAAC0T,EAAA,EAAD,CACE7B,QAAS1B,EAAKuG,iBACdrX,UAAU,mBACVkS,MAAO,CAAEoC,SAAU,MAEnB1C,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,iBACAJ,EAAAvS,EAAAsB,cAAA,QAAMX,UAAU,SAAhB,eAKN4R,EAAAvS,EAAAsB,cAAC0S,EAAAhU,EAAD,CACEW,UAAU,oBACVkS,MAAO,CAAEzQ,OAAQ,UAEhBsV,EAAOyB,SAASpI,IAAI,SAACF,EAAMlC,GAAP,OACnB4D,EAAAvS,EAAAsB,cAACqX,EAAA,EAAD,CACE3I,IAAKa,EAAKjK,GACVwS,YAAavI,EAAKjK,GAClB+H,MAAOA,EACP1L,KAAK,QAEJ,SAACkV,EAAUC,GAAX,OACC7F,EAAAvS,EAAAsB,cAACuT,EAAA,EAADzT,OAAAkX,OAAA,CACE3X,UAAU,wDACVmU,UAAWsD,EAASG,WAAa,GAAK,EACtCpF,QAAS,kBACPkF,EAAgBjX,OAAA+U,EAAA,EAAA/U,CAAA,GAAKyP,EAAN,CAAYF,OAAQ+G,EAAO9Q,OAE5CzG,IAAKgY,EAASK,UACVL,EAASM,eACTN,EAASO,gBARf,CASE7F,MAAKzR,OAAA+U,EAAA,EAAA/U,CAAA,GACA+W,EAASM,eAAe5F,SAG7BN,EAAAvS,EAAAsB,cAAC+X,EAAD,CAAgBxI,KAAMA,UAM/BsH,EAASmB,eAMfnC,EACC5E,EAAAvS,EAAAsB,cAACwX,EAAA,EAAD,CAAmBC,YAAa,kBAAMtH,EAAKoG,aAAY,KACrDtF,EAAAvS,EAAAsB,cAACuT,EAAA,EAAD,CACElU,UAAU,wEACVmU,UAAW,GAEXvC,EAAAvS,EAAAsB,cAAC2S,EAAA,EAAD,CACEtT,UAAU,QACVgM,QAAQ,WACRtJ,KAAK,gBACLyJ,MAAOsK,EACP3E,WAAS,EACTM,SAAUrB,KAAK3C,aACfsG,UAAW3D,KAAK3C,aAChBkK,WAAY,CACVC,aACE3G,EAAAvS,EAAAsB,cAAC+K,EAAA,EAAD,CAAgBvK,SAAS,OACvByQ,EAAAvS,EAAAsB,cAAC2R,EAAA,EAAD,CACEC,KAAK,QACLC,QAAS,kBAAM1B,EAAKoG,aAAY,KAEhCtF,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,CAAMpQ,SAAS,SAAf,YAKR+S,WAAY,CACVzC,MAAO,CACL7N,QAAS,WAIfuN,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,iBACb4R,EAAAvS,EAAAsB,cAACwS,EAAA,EAAD,CACEX,QAASzB,KAAK4F,iBACd3K,QAAQ,YACR/J,MAAM,WAHR,UAWN2P,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,QACb4R,EAAAvS,EAAAsB,cAACwS,EAAA,EAAD,CACEnT,UAAU,8CACVgM,QAAQ,YACR/J,MAAM,UACNuQ,QAAS,kBAAM1B,EAAKoG,aAAY,KAJlC,uBAjOY/W,aAuPTuV,cAPS,SAAAxI,GAAK,MAAK,CAChC2J,kBAAmBlB,YAAUC,KAAKC,WAClCyB,oBAAqB3B,YAAUC,KAAKC,WACpCsB,iBAAkBxB,YAAUC,KAAKC,WACjCZ,MAAO/H,EAAM4I,WAAWb,QAKxB,CAAE4B,sBAAmBS,wBAAqBH,sBAF7BzB,CAGbY,oBCtPWa,EAAmB,SAAAyB,GAC9B,OAAOC,IAAMC,KAAK,4BAA6BF,ICJ3CG,6MACJ7L,MAAQ,CACN8L,YAAY,EACZC,KAAM,GACNC,kBAAkB,EAClBC,mBAAmB,EACnBC,YAAa,MAMf1B,gBAAkB,SAAAxH,GAChB1C,EAAKM,SAAS,CAAEoL,kBAAkB,EAAMhJ,KAAMA,OAGhDmJ,kBAAoB,WAClB7L,EAAKM,SAAS,CAAEoL,kBAAkB,OAGpCI,oBAAsB,SAAAnN,GACpBqB,EAAKM,SAAS,CAAEqL,kBAAmBhN,OAGrCiC,aAAe,SAAAxF,GACK,UAAdA,EAAMyG,KAAoBzG,EAAM0G,SAG7B9B,EAAKM,SAAS,CAAEsL,YAAaxQ,EAAMyF,OAAOlC,SAF/CqB,EAAKjO,MAAMga,cAAc/L,EAAKN,MAAMkM,aACpC5L,EAAKM,SAAS,CAAEsL,YAAa,SAIjCI,UAAY,SAAAC,GAAU,IACZC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,YADIxI,EAE4C3D,EAAKjO,MAA/D0V,EAFc9D,EAEd8D,MAAO2E,EAFOzI,EAEPyI,kBAAmBC,EAFZ1I,EAEY0I,eAAgBC,EAF5B3I,EAE4B2I,YAG3CH,IAIsB,yBAAvBD,EAAOzB,YACT6B,EAAY7E,EAAMhP,GAAIyT,EAAO1L,MAAO2L,EAAY3L,OAE5C0L,EAAOzB,cAAgB0B,EAAY1B,YACrC2B,EACE3E,EAAMhP,GACNyT,EAAOzB,YACPyB,EAAO1L,MACP2L,EAAY3L,OAGd6L,EACE5E,EAAMhP,GACNyT,EAAOzB,YACP0B,EAAY1B,YACZyB,EACAC,0HAQC,IAAA7I,EAAAC,KAAAzC,EAC0DyC,KAAK7D,MAAhEgM,EADC5K,EACD4K,iBAAkBC,EADjB7K,EACiB6K,kBAAmBC,EADpC9K,EACoC8K,YAAalJ,EADjD5B,EACiD4B,KADjD6J,EAEyChJ,KAAKxR,MAA/C0Z,EAFCc,EAEDd,KAAMM,EAFLQ,EAEKR,cAAe5C,EAFpBoD,EAEoBpD,iBAE3B,OACE/E,EAAAvS,EAAAsB,cAAC0S,EAAAhU,EAAD,CAAWW,UAAU,sCACnB4R,EAAAvS,EAAAsB,cAACqX,EAAA,EAAD,CAAiBwB,UAAWzI,KAAKyI,WAC/B5H,EAAAvS,EAAAsB,cAACqX,EAAA,EAAD,CAAWC,YAAY,uBAAuBC,UAAU,cACrD,SAAAV,GAAQ,OACP5F,EAAAvS,EAAAsB,cAAA,MAAAF,OAAAkX,OAAA,CACEnY,IAAKgY,EAASK,UACVL,EAASwC,eAFf,CAGEha,UAAU,SAETiZ,EAAK7I,IAAI,SAAC2G,EAAQ/I,GAAT,OACR4D,EAAAvS,EAAAsB,cAACqX,EAAA,EAAD,CACE3I,IAAK0H,EAAO9Q,GACZwS,YAAa1B,EAAO9Q,GACpB+H,MAAOA,EACP1L,KAAK,UAEJ,SAACkV,EAAUC,GAAX,OACC7F,EAAAvS,EAAAsB,cAACsZ,EAAD,CACEnD,KAAM,CAAEU,WAAUC,WAAUV,UAC5BW,gBAAiB5G,EAAK4G,gBACtB2B,kBAAmBvI,EAAKuI,kBACxB1C,iBAAkBA,QAKzBa,EAASmB,gBAMlB/G,EAAAvS,EAAAsB,cAAA,WACGwY,EACCvH,EAAAvS,EAAAsB,cAACwX,EAAA,EAAD,CACEC,YAAa,kBAAMtH,EAAKwI,qBAAoB,KAE5C1H,EAAAvS,EAAAsB,cAACuT,EAAA,EAAD,CACEhC,MAAO,CAAEoC,SAAU,SACnBtU,UAAU,kDACVmU,UAAW,GAEXvC,EAAAvS,EAAAsB,cAAC2S,EAAA,EAAD,CACEtT,UAAU,QACVgM,QAAQ,WACRtJ,KAAK,cACLyJ,MAAOiN,EACPtH,WAAS,EACTM,SAAUrB,KAAK3C,aACfsG,UAAW3D,KAAK3C,aAChBkK,WAAY,CACVC,aACE3G,EAAAvS,EAAAsB,cAAC+K,EAAA,EAAD,CAAgBvK,SAAS,OACvByQ,EAAAvS,EAAAsB,cAAC2R,EAAA,EAAD,CACEC,KAAK,QACLC,QAAS,kBAAM1B,EAAKwI,qBAAoB,KAExC1H,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,CAAMpQ,SAAS,SAAf,YAKR+S,WAAY,CACVzC,MAAO,CACL7N,QAAS,WAIfuN,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,iBACb4R,EAAAvS,EAAAsB,cAACwS,EAAA,EAAD,CACEX,QAAS,WACP+G,EAAcH,GACdtI,EAAKhD,SAAS,CAAEsL,YAAa,MAE/BpN,QAAQ,YACR/J,MAAM,WANR,UAcN2P,EAAAvS,EAAAsB,cAACuT,EAAA,EAAD,CACElU,UAAU,wEACVmU,UAAW,EACXjC,MAAO,CAAEoC,SAAU,SACnB9B,QAAS,kBAAM1B,EAAKwI,qBAAoB,KAExC1H,EAAAvS,EAAAsB,cAACvB,EAAA,EAAD,CAAQY,UAAU,oBAAlB,KACA4R,EAAAvS,EAAAsB,cAAA,QAAMX,UAAU,wBAAhB,cAKLkZ,GACCtH,EAAAvS,EAAAsB,cAACuZ,EAAD,CACEhK,KAAMA,EACNvJ,KAAMuS,EACNvP,YAAaoH,KAAKsI,4BAxKIlZ,aAyLnBuV,cATS,SAAAxI,GAAK,MAAK,CAChC0M,kBAAmBjE,IAAUC,KAAKC,WAClCiE,YAAanE,IAAUC,KAAKC,WAC5BgE,eAAgBlE,IAAUC,KAAKC,WAC/BZ,MAAO/H,EAAM4I,WAAWb,MACxB7D,WAAYlE,EAAM4I,WAAW1E,WAC7BlC,UAAWhC,EAAM4I,WAAW5G,YAK5B,CACE0K,sBACAE,gBACAD,oBALWnE,CAObqD,WC/LIoB,6MACJjN,MAAQ,CACN+H,MAAO,CACLlO,MAAO,GACPoJ,QAAS,GACT8I,KAAM,OAiBVM,cAAgB,SAAAvC,GACI,KAAdA,GACFxJ,EAAKjO,MAAM6a,eAAe,CACxBnK,QAASzC,EAAKN,MAAM+H,MAAMhP,GAC1B+Q,iBAKNL,iBAAmB,SAAAiC,GACjBzB,EAAiB1W,OAAA+U,EAAA,EAAA/U,CAAA,CACfwP,QAASzC,EAAKjO,MAAM8a,MAAMC,OAAOrU,IAC9B2S,IACF2B,KAAK,SAAAtB,GACNzL,EAAKM,SAAS,CAAEmH,MAAMxU,OAAA+U,EAAA,EAAA/U,CAAA,GAAM+M,EAAKN,MAAM+H,MAAlB,CAAyBgE,KAAKxY,OAAAgV,EAAA,EAAAhV,CAAKwY,EAAKnC,eAIjE1I,aAAe,SAAAxF,GACb,IAAI4R,EAAW5R,EAAMyF,OAAOlC,MADNsO,EAEAjN,EAAKN,MAAM+H,MAA3B9E,EAFgBsK,EAEhBtK,QAASlK,EAFOwU,EAEPxU,GAFOkL,EAG4B3D,EAAKjO,MAAjDmb,EAHgBvJ,EAGhBuJ,sBAAuBC,EAHPxJ,EAGOwJ,iBACzBxK,EAAQ+C,KAAK,SAAA1E,GAAM,OAAIA,EAAOvI,KAAOuU,IACvCE,EAAsB,CAAEzK,QAAShK,EAAIuU,aAChCG,EAAiB,CAAE1K,QAAShK,EAAIuU,iGApCvC,IAAIvK,EAAUc,KAAKxR,MAAM8a,MAAMC,OAAOrU,GACtC8K,KAAKxR,MAAMqb,aAAa3K,GACxBc,KAAKxR,MAAMsb,gBACX9J,KAAKxR,MAAMub,gDAoCJ,IAAAhK,EAAAC,KAAAgK,EACkChK,KAAK7D,MAAM+H,MAD7C+F,EAAAD,EACD5K,eADC,IAAA6K,EACS,GADTA,EACajU,EADbgU,EACahU,MADbkU,EAAAF,EACoB9B,YADpB,IAAAgC,EAC2B,GAD3BA,EAAAC,EAEmBnK,KAAKxR,MAAzB6R,kBAFC,IAAA8J,EAEY,GAFZA,EAIP,OACEtJ,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,uBACb4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,uDACb4R,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,oBACb4R,EAAAvS,EAAAsB,cAACwa,EAAA,EAAD,CAAMC,GAAG,gBACPxJ,EAAAvS,EAAAsB,cAAC2R,EAAA,EAAD,KACEV,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,qBAGJJ,EAAAvS,EAAAsB,cAAA,MAAIX,UAAU,uBAAuB+G,GACrC6K,EAAAvS,EAAAsB,cAAC2R,EAAA,EAAD,CAAYtS,UAAU,QACpB4R,EAAAvS,EAAAsB,cAACqR,EAAA,EAAD,uBAIJJ,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,qCACZmQ,EAAQC,IAAI,SAAC5B,EAAQR,GAAT,OACX4D,EAAAvS,EAAAsB,cAACmS,EAAA,EAAD,CAASzD,IAAKrB,EAAOjH,MAAOyH,EAAO9L,KAAMd,SAAS,SAChDgQ,EAAAvS,EAAAsB,cAACvB,EAAA,EAAD,CAAQY,UAAU,SAASM,IAAKkO,EAAOiE,YAG3Cb,EAAAvS,EAAAsB,cAAC+R,EAAA,EAAD,CACEC,mBAAmB,QACnBC,wBAAwB,EACxBC,WACEjB,EAAAvS,EAAAsB,cAACmS,EAAA,EAAD,CAAS/L,MAAO,MAAOnF,SAAS,SAC9BgQ,EAAAvS,EAAAsB,cAACvB,EAAA,EAAD,CAAQY,UAAU,gCAAlB,OAIHoR,EAAWhB,IAAI,SAAAzB,GAAI,OAClBiD,EAAAvS,EAAAsB,cAACoS,EAAA,EAAD,CACE/S,UAAU,OACVqP,IAAKV,EAAK1I,GACV+M,QACEpB,EAAAvS,EAAAsB,cAACsS,EAAA,EAAD,CACErE,QAASuB,EAAQ+C,KAAK,SAAA1E,GAAM,OAAIA,EAAOvI,KAAO0I,EAAK1I,KACnDmM,SAAUtB,EAAK1C,aACfjC,MAAOwC,EAAK1I,KAGhBgJ,MACE2C,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,oBACb4R,EAAAvS,EAAAsB,cAACvB,EAAA,EAAD,CAAQkB,IAAKqO,EAAK8D,OAAQzS,UAAU,YACpC4R,EAAAvS,EAAAsB,cAAA,QAAMX,UAAU,SAAS2O,EAAKjM,cAU5CkP,EAAAvS,EAAAsB,cAAA,OAAKX,UAAU,qBACb4R,EAAAvS,EAAAsB,cAAC0a,EAAD,CACEpC,KAAMA,EACNM,cAAexI,KAAKwI,cACpB5C,iBAAkB5F,KAAK4F,wEA/FD/B,EAAWC,GACzC,MAAO,CACLI,MAAMxU,OAAA+U,EAAA,EAAA/U,CAAA,GAAMmU,EAAUK,eAlBR9U,aAmILuV,sBAZS,SAAAxI,GAAK,MAAK,CAChC0N,aAAcjF,YAAUC,KAAKC,WAC7BuE,eAAgBzE,YAAUC,KAAKC,WAC/BgF,cAAelF,YAAUC,KAAKC,WAC9BiF,aAAcnF,YAAUC,KAAKC,WAC7B8E,iBAAkBhF,YAAUC,KAAKC,WACjC6E,sBAAuB/E,YAAUC,KAAKC,WACtCZ,MAAO/H,EAAM4I,WAAWb,MACxB7D,WAAYlE,EAAM4I,WAAW1E,WAC7BlC,UAAWhC,EAAM4I,WAAW5G,YAK5B,CACE0L,iBACAR,mBACAS,kBACAC,iBACAH,qBACAD,2BARWhF,CAUbyE","file":"static/js/50.f0b9bc8e.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if there are children and not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover'\n    }\n  };\n};\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      childrenClassNameProp = props.childrenClassName,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"childrenClassName\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\"]);\n\n  var children = null;\n  var img = src || srcSet;\n\n  if (img) {\n    children = React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenClassNameProp && React.isValidElement(childrenProp)) {\n    children = React.cloneElement(childrenProp, {\n      className: clsx(childrenClassNameProp, childrenProp.props.className)\n    });\n  } else {\n    children = childrenProp;\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classNameProp, !img && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar.\n   * `src` and `alt` props will not be used and no `img` will\n   * be rendered by default.\n   *\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   * The className of the child element.\n   * Used by Chip and ListItemIcon to style the Avatar icon.\n   */\n  childrenClassName: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component\n   * is used to display an image.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   */\n  srcSet: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport clsx from 'clsx';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport { fade } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport { useForkRef } from '../utils/reactHelpers';\nimport { useIsFocusVisible } from '../utils/focusVisible';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the Popper component. */\n    popper: {\n      zIndex: theme.zIndex.tooltip,\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      flip: false // disable jss-rtl plugin\n\n    },\n\n    /* Styles applied to the Popper component if `interactive={true}`. */\n    popperInteractive: {\n      pointerEvents: 'auto'\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element. */\n    tooltip: {\n      backgroundColor: fade(theme.palette.grey[700], 0.9),\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.common.white,\n      fontFamily: theme.typography.fontFamily,\n      padding: '4px 8px',\n      fontSize: theme.typography.pxToRem(10),\n      lineHeight: \"\".concat(theme.typography.round(14 / 10), \"em\"),\n      maxWidth: 300,\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n    touch: {\n      padding: '8px 16px',\n      fontSize: theme.typography.pxToRem(14),\n      lineHeight: \"\".concat(theme.typography.round(16 / 14), \"em\"),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n    tooltipPlacementLeft: _defineProperty({\n      transformOrigin: 'right center',\n      margin: '0 24px '\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n    tooltipPlacementRight: _defineProperty({\n      transformOrigin: 'left center',\n      margin: '0 24px'\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n    tooltipPlacementTop: _defineProperty({\n      transformOrigin: 'center bottom',\n      margin: '24px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n    tooltipPlacementBottom: _defineProperty({\n      transformOrigin: 'center top',\n      margin: '24px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    })\n  };\n};\n\nfunction Tooltip(props) {\n  var children = props.children,\n      classes = props.classes,\n      _props$disableFocusLi = props.disableFocusListener,\n      disableFocusListener = _props$disableFocusLi === void 0 ? false : _props$disableFocusLi,\n      _props$disableHoverLi = props.disableHoverListener,\n      disableHoverListener = _props$disableHoverLi === void 0 ? false : _props$disableHoverLi,\n      _props$disableTouchLi = props.disableTouchListener,\n      disableTouchListener = _props$disableTouchLi === void 0 ? false : _props$disableTouchLi,\n      _props$enterDelay = props.enterDelay,\n      enterDelay = _props$enterDelay === void 0 ? 0 : _props$enterDelay,\n      _props$enterTouchDela = props.enterTouchDelay,\n      enterTouchDelay = _props$enterTouchDela === void 0 ? 700 : _props$enterTouchDela,\n      id = props.id,\n      _props$interactive = props.interactive,\n      interactive = _props$interactive === void 0 ? false : _props$interactive,\n      _props$leaveDelay = props.leaveDelay,\n      leaveDelay = _props$leaveDelay === void 0 ? 0 : _props$leaveDelay,\n      _props$leaveTouchDela = props.leaveTouchDelay,\n      leaveTouchDelay = _props$leaveTouchDela === void 0 ? 1500 : _props$leaveTouchDela,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottom' : _props$placement,\n      PopperProps = props.PopperProps,\n      theme = props.theme,\n      title = props.title,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterTouchDelay\", \"id\", \"interactive\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperProps\", \"theme\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openState = _React$useState2[0],\n      setOpenState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      forceUpdate = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      childNode = _React$useState6[0],\n      setChildNode = _React$useState6[1];\n\n  var ignoreNonTouchEvents = React.useRef(false);\n\n  var _React$useRef = React.useRef(openProp != null),\n      isControlled = _React$useRef.current;\n\n  var defaultId = React.useRef();\n  var closeTimer = React.useRef();\n  var enterTimer = React.useRef();\n  var leaveTimer = React.useRef();\n  var touchTimer = React.useRef();\n  React.useEffect(function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!(childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button'), ['Material-UI: you are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Place a `div` container on top of the element.'].join('\\n')) : void 0;\n  }, [isControlled, title, childNode]);\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    if (!defaultId.current) {\n      defaultId.current = \"mui-tooltip-\".concat(Math.round(Math.random() * 1e5));\n    } // Rerender with defaultId and childNode.\n\n\n    if (openProp) {\n      forceUpdate(function (n) {\n        return !n;\n      });\n    }\n  }, [openProp]);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      clearTimeout(touchTimer.current);\n    };\n  }, []);\n\n  var handleOpen = function handleOpen(event) {\n    // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n    if (!isControlled && !openState) {\n      setOpenState(true);\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleEnter = function handleEnter(event) {\n    var childrenProps = children.props;\n\n    if (event.type === 'mouseover' && childrenProps.onMouseOver) {\n      childrenProps.onMouseOver(event);\n    }\n\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    } // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n\n\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n\n    if (enterDelay) {\n      event.persist();\n      enterTimer.current = setTimeout(function () {\n        handleOpen(event);\n      }, enterDelay);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      childIsFocusVisible = _React$useState8[0],\n      setChildIsFocusVisible = _React$useState8[1];\n\n  function handleBlur() {\n    if (childIsFocusVisible) {\n      setChildIsFocusVisible(false);\n      onBlurVisible();\n    }\n  }\n\n  var handleFocus = function handleFocus(event) {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n\n    if (isFocusVisible(event)) {\n      setChildIsFocusVisible(true);\n      handleEnter(event);\n    }\n\n    var childrenProps = children.props;\n\n    if (childrenProps.onFocus) {\n      childrenProps.onFocus(event);\n    }\n  };\n\n  var handleClose = function handleClose(event) {\n    if (!isControlled) {\n      setOpenState(false);\n    }\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(function () {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  };\n\n  var handleLeave = function handleLeave(event) {\n    var childrenProps = children.props;\n\n    if (event.type === 'blur') {\n      if (childrenProps.onBlur) {\n        childrenProps.onBlur(event);\n      }\n\n      handleBlur(event);\n    }\n\n    if (event.type === 'mouseleave' && childrenProps.onMouseLeave) {\n      childrenProps.onMouseLeave(event);\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n\n    if (leaveDelay) {\n      event.persist();\n      leaveTimer.current = setTimeout(function () {\n        handleClose(event);\n      }, leaveDelay);\n    } else {\n      handleClose(event);\n    }\n  };\n\n  var handleTouchStart = function handleTouchStart(event) {\n    ignoreNonTouchEvents.current = true;\n    var childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    clearTimeout(touchTimer.current);\n    event.persist();\n    touchTimer.current = setTimeout(function () {\n      handleEnter(event);\n    }, enterTouchDelay);\n  };\n\n  var handleTouchEnd = function handleTouchEnd(event) {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(function () {\n      handleClose(event);\n    }, leaveTouchDelay);\n  }; // can be removed once we drop support for non ref forwarding class components\n\n\n  var handleOwnRef = useForkRef(React.useCallback(function (instance) {\n    // #StrictMode ready\n    setChildNode(ReactDOM.findDOMNode(instance));\n  }, []), focusVisibleRef);\n  var handleRef = useForkRef(children.ref, handleOwnRef);\n  var open = isControlled ? openProp : openState; // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  } // For accessibility and SEO concerns, we render the title to the DOM node when\n  // the tooltip is hidden. However, we have made a tradeoff when\n  // `disableHoverListener` is set. This title logic is disabled.\n  // It's allowing us to keep the implementation size minimal.\n  // We are open to change the tradeoff.\n\n\n  var shouldShowNativeTitle = !open && !disableHoverListener;\n\n  var childrenProps = _extends({\n    'aria-describedby': open ? id || defaultId.current : null,\n    title: shouldShowNativeTitle && typeof title === 'string' ? title : null\n  }, other, {}, children.props, {\n    className: clsx(other.className, children.props.className)\n  });\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = handleEnter;\n    childrenProps.onMouseLeave = handleLeave;\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = handleFocus;\n    childrenProps.onBlur = handleLeave;\n  }\n\n  var interactiveWrapperListeners = interactive ? {\n    onMouseOver: childrenProps.onMouseOver,\n    onMouseLeave: childrenProps.onMouseLeave,\n    onFocus: childrenProps.onFocus,\n    onBlur: childrenProps.onBlur\n  } : {};\n  process.env.NODE_ENV !== \"production\" ? warning(!children.props.title, ['Material-UI: you have provided a `title` prop to the child of <Tooltip />.', \"Remove this title prop `\".concat(children.props.title, \"` or the Tooltip component.\")].join('\\n')) : void 0;\n  return React.createElement(React.Fragment, null, React.cloneElement(children, _extends({\n    ref: handleRef\n  }, childrenProps)), React.createElement(Popper, _extends({\n    className: clsx(classes.popper, interactive && classes.popperInteractive),\n    placement: placement,\n    anchorEl: childNode,\n    open: childNode ? open : false,\n    id: childrenProps['aria-describedby'],\n    transition: true\n  }, interactiveWrapperListeners, PopperProps), function (_ref) {\n    var placementInner = _ref.placement,\n        TransitionPropsInner = _ref.TransitionProps;\n    return React.createElement(TransitionComponent, _extends({\n      timeout: theme.transitions.duration.shorter\n    }, TransitionPropsInner, TransitionProps), React.createElement(\"div\", {\n      className: clsx(classes.tooltip, classes[\"tooltipPlacement\".concat(capitalize(placementInner.split('-')[0]))], ignoreNonTouchEvents.current && classes.touch)\n    }, title));\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes = {\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * Do not respond to focus events.\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * The relationship between the tooltip and the wrapper component is not clear from the DOM.\n   * This prop is used with aria-describedby to solve the accessibility issue.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Makes a tooltip interactive, i.e. will not close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   */\n  interactive: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the tooltip requests to be closed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the tooltip requests to be open.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes.node.isRequired,\n\n  /**\n   * The component used for the transition.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTooltip',\n  withTheme: true\n})(Tooltip);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport warning from 'warning';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    process.env.NODE_ENV !== \"production\" ? warning(variantProp !== muiFormControl.variant, 'Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.') : void 0;\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return React.createElement(FormControlContext.Provider, {\n    value: null\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, {\n      filled: classes.filled\n    }[variant], {\n      start: classes.positionStart,\n      end: classes.positionEnd\n    }[position], {\n      dense: classes.marginDense\n    }[muiFormControl.margin]),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import React, { Component } from \"react\";\nimport {\n  Dialog,\n  TextField,\n  Icon,\n  Avatar,\n  Button,\n  Divider,\n  IconButton,\n  Grid,\n  Card,\n  MenuItem,\n  Input,\n  FormControlLabel,\n  Checkbox,\n  Tooltip\n} from \"@material-ui/core\";\nimport { getTimeDifference, generateRandomId } from \"utils.js\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { EgretMenu } from \"egret\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateCardInList } from \"../../redux/actions/ScrumBoardActions\";\n\nclass CardEditorDialog extends Component {\n  windowResizeListener;\n  state = {\n    id: \"\",\n    title: \"\",\n    description: \"\",\n    commentText: \"\",\n    fullScreen: false,\n    updateFromProps: true\n  };\n\n  closeDialog = () => {\n    if (this.windowResizeListener)\n      window.removeEventListener(\"resize\", this.windowResizeListener);\n    this.props.handleClose();\n  };\n\n  makeCoverPhoto = coverImage => {\n    this.setState({ coverImage });\n  };\n\n  removeAttachments = index => {\n    let { attachments = [] } = this.state;\n    attachments.splice(index, 1);\n    this.setState({ attachments });\n  };\n\n  handleChange = event => {\n    this.setState({ updateFromProps: false });\n\n    let target = event.target;\n    let id = target.value;\n\n    if (target.name === \"avatar\") {\n      let { cardMembers, boardMembers } = this.state;\n      let member = boardMembers.find(user => user.id === id);\n\n      if (!target.checked) {\n        cardMembers.splice(cardMembers.indexOf(member), 1);\n        this.setState({ cardMembers });\n      } else {\n        cardMembers.push(member);\n        this.setState({ cardMembers });\n      }\n    } else if (target.name === \"label\") {\n      let { labels, labelList } = this.state;\n      let label = labelList.find(item => item.id === parseInt(id));\n\n      if (!target.checked) {\n        labels.splice(labels.indexOf(label), 1);\n        this.setState({ labels });\n      } else {\n        labels.push(label);\n        this.setState({ labels });\n      }\n    } else if (\n      event.key === \"Enter\" &&\n      !event.shiftKey &&\n      target.name === \"commentText\"\n    ) {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      this.sendComment();\n    } else {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    }\n  };\n\n  handleSave = () => {\n    let {\n      id,\n      title,\n      coverImage,\n      cardMembers = [],\n      labels = [],\n      description,\n      attachments = [],\n      comments = [],\n      listId,\n      boardId\n    } = this.state;\n\n    let card = {\n      id,\n      title,\n      coverImage,\n      members: cardMembers.map(member => member.id),\n      labels: labels.map(item => item.id),\n      description,\n      attachments,\n      comments\n    };\n    this.props.updateCardInList(boardId, listId, card);\n    this.closeDialog();\n  };\n\n  sendComment = () => {\n    let { comments, user, commentText } = this.state;\n\n    if (commentText.trim() !== \"\")\n      comments.push({\n        id: generateRandomId(),\n        uid: user.userId,\n        text: commentText.trim(),\n        time: new Date()\n      });\n    this.setState({ comments, commentText: \"\" });\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!prevState.updateFromProps && prevState.updateFromProps !== undefined)\n      return {};\n\n    let {\n      card,\n      memberList = [], //all cardMembers\n      labelList = [],\n      board,\n      user\n    } = nextProps;\n\n    let {\n      members = [], //members in card\n      labels = []\n    } = card;\n\n    let cardMembers = members.map(boardMemberId =>\n      memberList.find(member => member.id === boardMemberId)\n    );\n    let modifiedLabelList = labels.map(labelId =>\n      labelList.find(label => label.id === labelId)\n    );\n    let boardMembers = board.members.map(boardMember =>\n      memberList.find(member => member.id === boardMember.id)\n    );\n\n    return {\n      ...card,\n      boardId: board.id,\n      cardMembers,\n      boardMembers,\n      labels: [...modifiedLabelList],\n      labelList,\n      user,\n      updateFromProps: false\n    };\n  }\n\n  componentDidMount() {\n    if (window.innerWidth < 768) {\n      this.setState({ fullScreen: true });\n    }\n    if (window)\n      this.windowResizeListener = window.addEventListener(\"resize\", event => {\n        if (event.target.innerWidth < 768) {\n          this.setState({ fullScreen: true });\n        } else this.setState({ fullScreen: false });\n      });\n  }\n\n  componentWillUnmount() {\n    if (this.windowResizeListener)\n      window.removeEventListener(\"resize\", this.windowResizeListener);\n  }\n\n  render() {\n    let { open, memberList } = this.props;\n    let {\n      fullScreen,\n      title,\n      cardMembers = [],\n      boardMembers = [],\n      labels = [],\n      labelList = [],\n      description,\n      attachments = [],\n      comments = [],\n      user,\n      commentText\n    } = this.state;\n\n    return (\n      <Dialog\n        onClose={this.closeDialog}\n        open={open}\n        fullScreen={fullScreen}\n        fullWidth={true}\n        scroll=\"body\"\n      >\n        <div className=\"scrum-board\">\n          <div className=\"px-sm-24 pt-sm-24\">\n            <div className=\"flex flex-middle\">\n              <div className=\"flex flex-middle flex-grow-1\">\n                <Icon className=\"text-muted\">assignment</Icon>\n                <Input\n                  style={{\n                    fontSize: \"1rem\",\n                    fontWeight: 500\n                  }}\n                  className=\"flex-grow-1 px-8 ml-8 capitalize\"\n                  type=\"text\"\n                  autoFocus\n                  name=\"title\"\n                  onChange={this.handleChange}\n                  disableUnderline={true}\n                  value={title}\n                ></Input>\n              </div>\n              <IconButton size=\"small\" onClick={this.closeDialog}>\n                <Icon>clear</Icon>\n              </IconButton>\n            </div>\n\n            <p className=\"m-0 ml-40 mb-16 text-small text-muted\">\n              Tech Startup Board Hot Backlog\n            </p>\n\n            <div className=\"ml-40 mb-16 flex flex-wrap flex-space-between\">\n              <div>\n                <h6 className=\"m-0 mb-8 uppercase text-muted\">cardMembers</h6>\n                <div className=\"flex position-relative face-group-36\">\n                  {cardMembers.map(member => (\n                    <Avatar\n                      key={member.id}\n                      className=\"avatar\"\n                      src={member.avatar}\n                    />\n                  ))}\n                  <EgretMenu\n                    horizontalPosition=\"center\"\n                    shouldCloseOnItemClick={false}\n                    menuButton={\n                      <Tooltip title={\"Add\"} fontSize=\"large\">\n                        <Avatar className=\"avatar ml--12 cursor-pointer\">\n                          +\n                        </Avatar>\n                      </Tooltip>\n                    }\n                  >\n                    {boardMembers.map(user => (\n                      <FormControlLabel\n                        className=\"ml-0\"\n                        key={user.id}\n                        control={\n                          <Checkbox\n                            name=\"avatar\"\n                            checked={cardMembers.some(\n                              member => member.id === user.id\n                            )}\n                            onChange={this.handleChange}\n                            value={user.id}\n                          />\n                        }\n                        label={\n                          <div className=\"flex flex-middle\">\n                            <Avatar\n                              src={user.avatar}\n                              className=\"size-24\"\n                            ></Avatar>\n                            <span className=\"ml-12\">{user.name}</span>\n                          </div>\n                        }\n                      />\n                    ))}\n                  </EgretMenu>\n                </div>\n              </div>\n              <div>\n                <h6 className=\"m-0 mb-8 uppercase text-muted\">labels</h6>\n                <div className=\"button-group\">\n                  {labels.map(label => (\n                    <Button\n                      key={label.id}\n                      size=\"small\"\n                      variant=\"contained\"\n                      className={`capitalize mr-4 text-white text-small bg-${label.color}`}\n                    >\n                      {label.title}\n                    </Button>\n                  ))}\n                  <EgretMenu\n                    horizontalPosition=\"right\"\n                    shouldCloseOnItemClick={false}\n                    menuButton={\n                      <Tooltip title={\"Add\"} fontSize=\"large\">\n                        <Button className=\"bg-light-gray\" size=\"small\">\n                          +\n                        </Button>\n                      </Tooltip>\n                    }\n                  >\n                    {labelList.map(label => (\n                      <FormControlLabel\n                        className=\"ml-0\"\n                        key={label.id}\n                        control={\n                          <Checkbox\n                            checked={labels.some(item => item.id === label.id)}\n                            onChange={this.handleChange}\n                            value={label.id}\n                            name=\"label\"\n                          />\n                        }\n                        label={\n                          <div className=\"flex flex-middle\">\n                            <div\n                              className={`border-radius-4 size-24 bg-${label.color}`}\n                            ></div>\n                            <span className=\"ml-12\">{label.title}</span>\n                          </div>\n                        }\n                      />\n                    ))}\n                  </EgretMenu>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <Divider></Divider>\n\n          <Scrollbar\n            className=\"position-relative pt-16 mb-16\"\n            style={{ maxHeight: \"45vh\" }}\n          >\n            <div className=\"px-sm-24 pt-16\">\n              <div className=\"flex flex-middle mb-8\">\n                <Icon className=\"text-muted\">description</Icon>\n                <h6 className=\"m-0 ml-16 uppercase text-muted\">description</h6>\n              </div>\n              <div className=\"ml-40 mb-16 flex\">\n                <TextField\n                  className=\"text-muted\"\n                  onChange={this.handleChange}\n                  name=\"description\"\n                  value={description}\n                  variant=\"outlined\"\n                  fullWidth\n                  multiline\n                />\n              </div>\n\n              <div className=\"flex flex-space-between flex-middle mb-16\">\n                <div className=\"flex flex-middle\">\n                  <Icon className=\"text-muted\">attach_file</Icon>\n                  <h6 className=\"m-0 ml-16 uppercase text-muted\">\n                    attachments\n                  </h6>\n                </div>\n\n                <label htmlFor=\"upload-file\">\n                  <Button\n                    className=\"text-primary uppercase font-weight-500\"\n                    component=\"span\"\n                  >\n                    + add an attachment\n                  </Button>\n                </label>\n                <input\n                  className=\"display-none\"\n                  id=\"upload-file\"\n                  type=\"file\"\n                  multiple\n                />\n              </div>\n\n              <div className=\"ml-40 mb-16\">\n                <Grid container spacing={2}>\n                  {attachments.map((file, id) => (\n                    <Grid key={id} item lg={6} md={6} sm={12} xs={12}>\n                      <Card\n                        className=\"p-4 flex flex-middle bg-default h-100\"\n                        elevation={2}\n                      >\n                        <div className=\"flex flex-middle border-radius-8\">\n                          <img src={file.url} alt=\"image cover photo\" />\n                        </div>\n                        <div className=\"ml-16\">\n                          <h6 className=\"m-0 text-muted capitalize\">\n                            {file.name}\n                          </h6>\n                          <small className=\"text-muted text-small capitalize\">\n                            {file.size}\n                          </small>\n                        </div>\n                        <EgretMenu\n                          horizontalPosition=\"center\"\n                          menuButton={\n                            <IconButton className=\"ml-16\">\n                              <Icon>more_vert</Icon>\n                            </IconButton>\n                          }\n                        >\n                          <MenuItem\n                            className=\"flex flex-middle\"\n                            onClick={() => this.makeCoverPhoto(file.url)}\n                            style={{ minWidth: 165 }}\n                          >\n                            <Icon> insert_photo </Icon>\n                            <span className=\"pl-16\"> Make Cover </span>\n                          </MenuItem>\n                          <MenuItem\n                            onClick={() => this.removeAttachments(id)}\n                            className=\"flex flex-middle\"\n                            style={{ minWidth: 165 }}\n                          >\n                            <Icon> delete </Icon>\n                            <span className=\"pl-16\"> Remove </span>\n                          </MenuItem>\n                        </EgretMenu>\n                      </Card>\n                    </Grid>\n                  ))}\n                </Grid>\n              </div>\n            </div>\n\n            <Divider className=\"mb-16\"></Divider>\n\n            <div className=\"px-sm-24\">\n              <div className=\"flex flex-middle mb-16\">\n                <Icon className=\"text-muted\">message</Icon>\n                <h6 className=\"m-0 ml-16 uppercase text-muted\">comments</h6>\n              </div>\n              <div className=\"comments ml-40\">\n                {comments.map(comment => {\n                  let user = memberList.find(user => user.id === comment.uid);\n                  return (\n                    <div className=\"mb-16\" key={comment.id}>\n                      <div className=\"flex flex-middle mb-8\">\n                        <Avatar className=\"avatar size-36\" src={user.avatar} />\n                        <div className=\"ml-12\">\n                          <h6 className=\"m-0\">{user.name}</h6>\n                          <small>\n                            {getTimeDifference(new Date(comment.time))} ago\n                          </small>\n                        </div>\n                      </div>\n                      <p className=\"m-0 text-muted\">{comment.text}</p>\n                    </div>\n                  );\n                })}\n\n                <div className=\"flex flex-middle mb-16\">\n                  <Avatar className=\"avatar size-36\" src={user.photoURL} />\n                  <div className=\"flex-grow-1 flex\">\n                    <TextField\n                      className=\"ml-12 text-muted\"\n                      onChange={this.handleChange}\n                      onKeyDown={this.handleChange}\n                      variant=\"outlined\"\n                      name=\"commentText\"\n                      value={commentText}\n                      fullWidth\n                      inputProps={{\n                        style: {\n                          padding: \"10px\"\n                        }\n                      }}\n                    />\n                  </div>\n                  <Button onClick={this.sendComment}>Send</Button>\n                </div>\n              </div>\n            </div>\n          </Scrollbar>\n\n          <div className=\"px-sm-24 mb-12 flex flex-end\">\n            <Button className=\"mr-12\" onClick={this.closeDialog}>\n              Cancel\n            </Button>\n            <Button\n              onClick={this.handleSave}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Save\n            </Button>\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  updateCardInList: PropTypes.func.isRequired,\n  board: state.scrumboard.board,\n  memberList: state.scrumboard.memberList,\n  labelList: state.scrumboard.labelList,\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateCardInList }\n)(CardEditorDialog);\n","import React from \"react\";\n\nconst ScrumBoardLabelBar = ({ color = \"primary\" }) => {\n  return (\n    <div\n      className={`bg-${color}`}\n      style={{\n        width: \"32px\",\n        height: \"6px\",\n        borderRadius: \"6px\",\n        overflow: \"hidden\",\n        marginRight: \"8px\"\n      }}\n    ></div>\n  );\n};\n\nexport default ScrumBoardLabelBar;\n","import React from \"react\";\nimport ScrumBoardLabelBar from \"./ScrumBoardLabelBar\";\nimport { Button, Icon, Avatar } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\n\nconst ScrumBoardCard = ({\n  card,\n  memberList = [], //all members\n  labelList = []\n}) => {\n  let {\n    title,\n    members = [], //members in card\n    labels = [],\n    coverImage,\n    attachments,\n    comments\n  } = card;\n\n  let modifiedCardMemberList = members.map(boardMemberId =>\n    memberList.find(member => member.id === boardMemberId)\n  );\n  let modifiedLabelList = labels.map(labelId =>\n    labelList.find(label => label.id === labelId)\n  );\n\n  return (\n    <div className=\"scrum-board-card\">\n      {coverImage && (\n        <img className=\"border-radius-4\" src={coverImage} alt=\"stair\" />\n      )}\n      <div className=\"px-16 py-12\">\n        {modifiedLabelList.length !== 0 && (\n          <div className=\"flex mb-12 font-weight-500\">\n            {modifiedLabelList.map(\n              label =>\n                label && (\n                  <ScrumBoardLabelBar\n                    key={label.id}\n                    color={label.color}\n                  ></ScrumBoardLabelBar>\n                )\n            )}\n          </div>\n        )}\n\n        <h6 className=\"m-0 font-weight-500\">{title}</h6>\n\n        {(comments.length !== 0 ||\n          attachments.length !== 0 ||\n          members.length !== 0) && (\n          <div className=\"flex flex-middle flex-space-between mt-12 button-group text-small\">\n            <div className=\"flex\">\n              {comments.length !== 0 && (\n                <Button size=\"small\">\n                  <Icon className=\"mr-4 text-small\" fontSize=\"small\">\n                    chat\n                  </Icon>\n                  <span>{comments.length}</span>\n                </Button>\n              )}\n              {attachments.length !== 0 && (\n                <Button size=\"small\">\n                  <Icon className=\"mr-4 text-small\" fontSize=\"small\">\n                    attach_file\n                  </Icon>\n                  <span>{attachments.length}</span>\n                </Button>\n              )}\n            </div>\n            <div className=\"flex position-relative face-group\">\n              {modifiedCardMemberList.map(\n                member =>\n                  member && (\n                    <Avatar\n                      key={member.id}\n                      className=\"avatar\"\n                      src={member.avatar}\n                    />\n                  )\n              )}\n              {/* <Avatar className=\"number-avatar avatar\">+3</Avatar> */}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  memberList: state.scrumboard.memberList,\n  labelList: state.scrumboard.labelList\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(ScrumBoardCard);\n","import React, { Component } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport {\n  Card,\n  Icon,\n  MenuItem,\n  IconButton,\n  TextField,\n  InputAdornment,\n  ClickAwayListener,\n  Button\n} from \"@material-ui/core\";\nimport ScrumBoardCard from \"./ScrumBoardCard\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { EgretMenu } from \"egret\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport {\n  renameListInBoard,\n  deleteListFromBoard,\n  addNewCardInList\n} from \"../../redux/actions/ScrumBoardActions\";\n\nclass BoardList extends Component {\n  state = {\n    shouldOpenTitleEditor: false,\n    shouldOpenAddCard: false,\n    cardTitleText: \"\",\n    columnTitleText: \"\"\n  };\n\n  handleChange = event => {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      if (event.target.name === \"cardTitleText\") {\n        this.handleAddNewCard();\n      } else {\n        this.handleRenameList();\n      }\n    } else this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleRenameList = () => {\n    this.props.renameListInBoard({\n      boardId: this.props.board.id,\n      listId: this.props.data.column.id,\n      listTitle: this.state.columnTitleText\n    });\n    this.openTitleEditor(false);\n  };\n\n  openTitleEditor = value => {\n    this.setState({ shouldOpenTitleEditor: value });\n  };\n\n  openAddCard = value => {\n    this.setState({ shouldOpenAddCard: value });\n  };\n\n  handleAddNewCard = () => {\n    let { cardTitleText } = this.state;\n    if (cardTitleText.trim() !== \"\") {\n      this.props.addNewCardInList({\n        boardId: this.props.board.id,\n        listId: this.props.data.column.id,\n        cardTitle: this.state.cardTitleText\n      });\n      this.setState({ cardTitleText: \"\" });\n    }\n  };\n\n  handleListDelete = () => {\n    this.props.deleteListFromBoard({\n      boardId: this.props.board.id,\n      listId: this.props.data.column.id\n    });\n  };\n\n  render() {\n    let { provided, snapshot, column } = this.props.data;\n    let {\n      shouldOpenAddCard,\n      shouldOpenTitleEditor,\n      cardTitleText\n    } = this.state;\n    let { handleCardClick } = this.props;\n\n    return (\n      <Card\n        className=\"list-column position-relative pt-4\"\n        elevation={snapshot.isDragging ? 10 : 3}\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        style={{\n          minWidth: \"290px\",\n          maxWidth: \"290px\",\n          ...provided.draggableProps.style\n        }}\n      >\n        <Droppable droppableId={column.id} direction=\"vertical\" type=\"card\">\n          {(provided, snapshot) => (\n            <div ref={provided.innerRef} className=\"position-relative px-16\">\n              <div className=\"flex flex-middle flex-space-between py-8\">\n                {shouldOpenTitleEditor ? (\n                  <ClickAwayListener\n                    onClickAway={() => this.openTitleEditor(false)}\n                  >\n                    <TextField\n                      variant=\"outlined\"\n                      defaultValue={column.title}\n                      onChange={this.handleChange}\n                      onKeyDown={this.handleChange}\n                      name=\"columnTitleText\"\n                      InputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              size=\"small\"\n                              onClick={this.handleRenameList}\n                            >\n                              <Icon fontSize=\"small\">done</Icon>\n                            </IconButton>\n                          </InputAdornment>\n                        )\n                      }}\n                      inputProps={{\n                        style: {\n                          padding: \"10px\"\n                        }\n                      }}\n                    />\n                  </ClickAwayListener>\n                ) : (\n                  <h4\n                    className=\"m-0 flex-grow-1 py-4 capitalize\"\n                    onClick={() => this.openTitleEditor(true)}\n                  >\n                    {column.title}\n                  </h4>\n                )}\n                <EgretMenu\n                  horizontalPosition=\"right\"\n                  menuButton={\n                    <IconButton>\n                      <Icon>more_vert</Icon>\n                    </IconButton>\n                  }\n                >\n                  <MenuItem\n                    className=\"flex flex-middle\"\n                    style={{ minWidth: 150 }}\n                  >\n                    <Icon> settings </Icon>\n                    <span className=\"pl-16\"> Settings </span>\n                  </MenuItem>\n                  <MenuItem\n                    onClick={this.handleListDelete}\n                    className=\"flex flex-middle\"\n                    style={{ minWidth: 150 }}\n                  >\n                    <Icon> delete </Icon>\n                    <span className=\"pl-16\"> Delete </span>\n                  </MenuItem>\n                </EgretMenu>\n              </div>\n\n              <Scrollbar\n                className=\"position-relative\"\n                style={{ height: \"380px\" }}\n              >\n                {column.cardList.map((card, index) => (\n                  <Draggable\n                    key={card.id}\n                    draggableId={card.id}\n                    index={index}\n                    type=\"card\"\n                  >\n                    {(provided, snapshot) => (\n                      <Card\n                        className=\"list-column__card borderborder-radius-4 bg-light-gray\"\n                        elevation={snapshot.isDragging ? 10 : 3}\n                        onClick={() =>\n                          handleCardClick({ ...card, listId: column.id })\n                        }\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={{\n                          ...provided.draggableProps.style\n                        }}\n                      >\n                        <ScrumBoardCard card={card}></ScrumBoardCard>\n                      </Card>\n                    )}\n                  </Draggable>\n                ))}\n              </Scrollbar>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n\n        {/* ===================================================== */}\n        {shouldOpenAddCard ? (\n          <ClickAwayListener onClickAway={() => this.openAddCard(false)}>\n            <Card\n              className=\"position-bottom border-radius-0 cursor-pointer px-16 pt-16 pb-8 w-100\"\n              elevation={5}\n            >\n              <TextField\n                className=\"mb-12\"\n                variant=\"outlined\"\n                name=\"cardTitleText\"\n                value={cardTitleText}\n                fullWidth\n                onChange={this.handleChange}\n                onKeyDown={this.handleChange}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => this.openAddCard(false)}\n                      >\n                        <Icon fontSize=\"small\">clear</Icon>\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n                inputProps={{\n                  style: {\n                    padding: \"10px\"\n                  }\n                }}\n              />\n              <div className=\"flex flex-end\">\n                <Button\n                  onClick={this.handleAddNewCard}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Add\n                </Button>\n              </div>\n            </Card>\n          </ClickAwayListener>\n        ) : (\n          <div className=\"flex\">\n            <Button\n              className=\"font-weight-500 flex-grow-1 border-radius-0\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => this.openAddCard(true)}\n            >\n              + Add Card\n            </Button>\n          </div>\n        )}\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  renameListInBoard: PropTypes.func.isRequired,\n  deleteListFromBoard: PropTypes.func.isRequired,\n  addNewCardInList: PropTypes.func.isRequired,\n  board: state.scrumboard.board\n});\n\nexport default connect(\n  mapStateToProps,\n  { renameListInBoard, deleteListFromBoard, addNewCardInList }\n)(BoardList);\n","import axios from \"axios\";\n\nexport const getAllBoard = () => {\n  return axios.get(\"/api/scrum-board/all-board\");\n};\nexport const getBoardById = id => {\n  return axios.get(\"/api/scrum-board\", { data: id });\n};\nexport const getUserById = id => {\n  return axios.get(\"/api/user\", { data: id });\n};\nexport const deleteUser = User => {\n  return axios.post(\"/api/user/delete\", User);\n};\nexport const addNewUser = User => {\n  return axios.post(\"/api/user/add\", User);\n};\nexport const updateUser = User => {\n  return axios.post(\"/api/user/update\", User);\n};\n\nexport const addNewBoard = title => {\n  return axios.post(\"/api/scrum-board/add-board\", title);\n};\nexport const addNewColumnInBoard = columnData => {\n  return axios.post(\"/api/scrum-board/add-column\", columnData);\n};\nexport const addNewCardInList = cardData => {\n  return axios.post(\"/api/scrum-board/add-card\", cardData);\n};\n","import React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport CardEditorDialog from \"./CardEditorDialog\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport BoardList from \"./BoardList\";\nimport {\n  Avatar,\n  Card,\n  ClickAwayListener,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Icon,\n  Button\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addNewColumnInBoard } from \"./ScrumBoardService\";\nimport {\n  reorderCardInList,\n  reorderList,\n  moveCardInList\n} from \"../../redux/actions/ScrumBoardActions\";\n\nclass ScrumBoardContainer extends Component {\n  state = {\n    dataLoaded: false,\n    list: [],\n    shouldOpenDialog: false,\n    shouldOpenAddList: false,\n    columnTitle: \"\"\n  };\n\n  // convert this into a list instead of hard coded state object\n  componentDidMount() {}\n\n  handleCardClick = card => {\n    this.setState({ shouldOpenDialog: true, card: card });\n  };\n\n  handleDialogClose = () => {\n    this.setState({ shouldOpenDialog: false });\n  };\n\n  handleAddListToggle = value => {\n    this.setState({ shouldOpenAddList: value });\n  };\n\n  handleChange = event => {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      this.props.handleAddList(this.state.columnTitle);\n      this.setState({ columnTitle: \"\" });\n    } else this.setState({ columnTitle: event.target.value });\n  };\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n    let { board, reorderCardInList, moveCardInList, reorderList } = this.props;\n\n    // if dropped outside of list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === \"horizontal-droppable\") {\n      reorderList(board.id, source.index, destination.index);\n    } else {\n      if (source.droppableId === destination.droppableId) {\n        reorderCardInList(\n          board.id,\n          source.droppableId,\n          source.index,\n          destination.index\n        );\n      } else {\n        moveCardInList(\n          board.id,\n          source.droppableId,\n          destination.droppableId,\n          source,\n          destination\n        );\n      }\n    }\n  };\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    let { shouldOpenDialog, shouldOpenAddList, columnTitle, card } = this.state;\n    let { list, handleAddList, handleAddNewCard } = this.props;\n\n    return (\n      <Scrollbar className=\"position-relative flex pb-16 w-100\">\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId=\"horizontal-droppable\" direction=\"horizontal\">\n            {provided => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                className=\"flex\"\n              >\n                {list.map((column, index) => (\n                  <Draggable\n                    key={column.id}\n                    draggableId={column.id}\n                    index={index}\n                    type=\"column\"\n                  >\n                    {(provided, snapshot) => (\n                      <BoardList\n                        data={{ provided, snapshot, column }}\n                        handleCardClick={this.handleCardClick}\n                        handleDialogClose={this.handleDialogClose}\n                        handleAddNewCard={handleAddNewCard}\n                      ></BoardList>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n        <div>\n          {shouldOpenAddList ? (\n            <ClickAwayListener\n              onClickAway={() => this.handleAddListToggle(false)}\n            >\n              <Card\n                style={{ minWidth: \"290px\" }}\n                className=\"list-column border-radius-0 cursor-pointer p-16\"\n                elevation={3}\n              >\n                <TextField\n                  className=\"mb-12\"\n                  variant=\"outlined\"\n                  name=\"columnTitle\"\n                  value={columnTitle}\n                  fullWidth\n                  onChange={this.handleChange}\n                  onKeyDown={this.handleChange}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => this.handleAddListToggle(false)}\n                        >\n                          <Icon fontSize=\"small\">clear</Icon>\n                        </IconButton>\n                      </InputAdornment>\n                    )\n                  }}\n                  inputProps={{\n                    style: {\n                      padding: \"10px\"\n                    }\n                  }}\n                />\n                <div className=\"flex flex-end\">\n                  <Button\n                    onClick={() => {\n                      handleAddList(columnTitle);\n                      this.setState({ columnTitle: \"\" });\n                    }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Add\n                  </Button>\n                </div>\n              </Card>\n            </ClickAwayListener>\n          ) : (\n            <Card\n              className=\"list-column cursor-pointer flex flex-middle py-16 px-16 bg-light-gray\"\n              elevation={3}\n              style={{ minWidth: \"290px\" }}\n              onClick={() => this.handleAddListToggle(true)}\n            >\n              <Avatar className=\"size-24 bg-error\">+</Avatar>\n              <span className=\"ml-8 font-weight-500\">Add List</span>\n            </Card>\n          )}\n        </div>\n\n        {shouldOpenDialog && (\n          <CardEditorDialog\n            card={card}\n            open={shouldOpenDialog}\n            handleClose={this.handleDialogClose}\n          ></CardEditorDialog>\n        )}\n      </Scrollbar>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reorderCardInList: PropTypes.func.isRequired,\n  reorderList: PropTypes.func.isRequired,\n  moveCardInList: PropTypes.func.isRequired,\n  board: state.scrumboard.board,\n  memberList: state.scrumboard.memberList,\n  labelList: state.scrumboard.labelList\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    reorderCardInList,\n    reorderList,\n    moveCardInList\n  }\n)(ScrumBoardContainer);\n","import React, { Component } from \"react\";\nimport {\n  Icon,\n  IconButton,\n  Avatar,\n  Tooltip,\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\nimport ScrumBoardContainer from \"./ScrumBoardContainer\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { addNewCardInList } from \"./ScrumBoardService\";\nimport { EgretMenu } from \"egret\";\n\nimport {\n  getBoardById,\n  addListInBoard,\n  getAllMembers,\n  getAllLabels,\n  addMemberInBoard,\n  deleteMemberFromBoard\n} from \"../../redux/actions/ScrumBoardActions\";\n\nclass Board extends Component {\n  state = {\n    board: {\n      title: \"\",\n      members: [],\n      list: []\n    }\n  };\n\n  componentDidMount() {\n    let boardId = this.props.match.params.id;\n    this.props.getBoardById(boardId);\n    this.props.getAllMembers();\n    this.props.getAllLabels();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return {\n      board: { ...nextProps.board }\n    };\n  }\n\n  handleAddList = listTitle => {\n    if (listTitle !== \"\") {\n      this.props.addListInBoard({\n        boardId: this.state.board.id,\n        listTitle\n      });\n    }\n  };\n\n  handleAddNewCard = cardData => {\n    addNewCardInList({\n      boardId: this.props.match.params.id,\n      ...cardData\n    }).then(list => {\n      this.setState({ board: { ...this.state.board, list: [...list.data] } });\n    });\n  };\n\n  handleChange = event => {\n    let memberId = event.target.value;\n    let { members, id } = this.state.board;\n    let { deleteMemberFromBoard, addMemberInBoard } = this.props;\n    if (members.some(member => member.id === memberId)) {\n      deleteMemberFromBoard({ boardId: id, memberId });\n    } else addMemberInBoard({ boardId: id, memberId });\n  };\n\n  render() {\n    let { members = [], title, list = [] } = this.state.board;\n    let { memberList = [] } = this.props;\n\n    return (\n      <div className=\"scrum-board m-sm-30\">\n        <div className=\"flex flex-wrap flex-middle flex-space-between mb-16\">\n          <div className=\"flex flex-middle\">\n            <Link to=\"/scrum-board\">\n              <IconButton>\n                <Icon>arrow_back</Icon>\n              </IconButton>\n            </Link>\n            <h5 className=\"m-0 ml-8 capitalize\">{title}</h5>\n            <IconButton className=\"ml-8\">\n              <Icon>star_outline</Icon>\n            </IconButton>\n          </div>\n\n          <div className=\"flex position-relative face-group\">\n            {members.map((member, index) => (\n              <Tooltip key={index} title={member.name} fontSize=\"large\">\n                <Avatar className=\"avatar\" src={member.avatar} />\n              </Tooltip>\n            ))}\n            <EgretMenu\n              horizontalPosition=\"right\"\n              shouldCloseOnItemClick={false}\n              menuButton={\n                <Tooltip title={\"Add\"} fontSize=\"large\">\n                  <Avatar className=\"avatar ml--12 cursor-pointer\">+</Avatar>\n                </Tooltip>\n              }\n            >\n              {memberList.map(user => (\n                <FormControlLabel\n                  className=\"ml-0\"\n                  key={user.id}\n                  control={\n                    <Checkbox\n                      checked={members.some(member => member.id === user.id)}\n                      onChange={this.handleChange}\n                      value={user.id}\n                    />\n                  }\n                  label={\n                    <div className=\"flex flex-middle\">\n                      <Avatar src={user.avatar} className=\"size-24\"></Avatar>\n                      <span className=\"ml-12\">{user.name}</span>\n                    </div>\n                  }\n                />\n              ))}\n            </EgretMenu>\n            {/* <Avatar className=\"number-avatar avatar\">+3</Avatar> */}\n          </div>\n        </div>\n\n        <div className=\"position-relative\">\n          <ScrumBoardContainer\n            list={list}\n            handleAddList={this.handleAddList}\n            handleAddNewCard={this.handleAddNewCard}\n          ></ScrumBoardContainer>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  getBoardById: PropTypes.func.isRequired,\n  addListInBoard: PropTypes.func.isRequired,\n  getAllMembers: PropTypes.func.isRequired,\n  getAllLabels: PropTypes.func.isRequired,\n  addMemberInBoard: PropTypes.func.isRequired,\n  deleteMemberFromBoard: PropTypes.func.isRequired,\n  board: state.scrumboard.board,\n  memberList: state.scrumboard.memberList,\n  labelList: state.scrumboard.labelList\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getBoardById,\n    addListInBoard,\n    getAllMembers,\n    getAllLabels,\n    addMemberInBoard,\n    deleteMemberFromBoard\n  }\n)(Board);\n"],"sourceRoot":""}