{"version":3,"sources":["../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","app/views/scrum-board/AppScrumBoard.jsx"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","clsx__WEBPACK_IMPORTED_MODULE_4__","_Typography__WEBPACK_IMPORTED_MODULE_6__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_7__","_FormControl_FormControlContext__WEBPACK_IMPORTED_MODULE_8__","InputAdornment","a","forwardRef","props","ref","children","classes","className","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","variant","other","Object","muiFormControl","createElement","Provider","value","root","hiddenLabel","filled","start","positionStart","end","positionEnd","dense","marginDense","margin","color","__webpack_exports__","display","height","maxHeight","alignItems","&$positionStart:not($hiddenLabel)","marginTop","marginRight","marginLeft","pointerEvents","name","AppScrumBoard","state","shouldOpenDialog","textFieldValue","boardList","openEditorDialog","_this","setState","handleChange","event","key","shiftKey","target","handleAddNewBoard","title","trim","addNewBoard","this","getAllBoard","_this2","_this$state","_this$props$boardList","react__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","container","spacing","map","board","id","item","lg","md","sm","xs","react_router_dom__WEBPACK_IMPORTED_MODULE_14__","to","concat","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","elevation","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","onClickAway","style","width","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","onChange","onKeyDown","label","autoFocus","fullWidth","InputProps","endAdornment","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","size","onClick","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","fontSize","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","connect","PropTypes","func","isRequired","scrumboard"],"mappings":"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","file":"static/js/61.4b8ad4ba.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport warning from 'warning';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    process.env.NODE_ENV !== \"production\" ? warning(variantProp !== muiFormControl.variant, 'Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.') : void 0;\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return React.createElement(FormControlContext.Provider, {\n    value: null\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, {\n      filled: classes.filled\n    }[variant], {\n      start: classes.positionStart,\n      end: classes.positionEnd\n    }[position], {\n      dense: classes.marginDense\n    }[muiFormControl.margin]),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import React, { Component } from \"react\";\nimport {\n  Card,\n  Grid,\n  Button,\n  ClickAwayListener,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Icon\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getAllBoard,\n  addNewBoard\n} from \"../../redux/actions/ScrumBoardActions\";\n\nclass AppScrumBoard extends Component {\n  state = {\n    shouldOpenDialog: false,\n    textFieldValue: \"\",\n    boardList: []\n  };\n\n  componentDidMount() {\n    this.props.getAllBoard();\n  }\n\n  openEditorDialog = value => {\n    this.setState({ shouldOpenDialog: value });\n  };\n\n  handleChange = event => {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      this.handleAddNewBoard();\n    } else this.setState({ textFieldValue: event.target.value });\n  };\n\n  handleAddNewBoard = () => {\n    let title = this.state.textFieldValue.trim();\n    if (title !== \"\") {\n      this.props.addNewBoard(title);\n      this.setState({ textFieldValue: \"\" });\n    }\n  };\n\n  render() {\n    let { shouldOpenDialog, textFieldValue } = this.state;\n    let { boardList = [] } = this.props;\n\n    return (\n      <div className=\"scrum-board m-sm-30\">\n        <Grid container spacing={2}>\n          {boardList.map(board => (\n            <Grid key={board.id} item lg={3} md={3} sm={12} xs={12}>\n              <Link to={`/scrum-board/${board.id}`}>\n                <Card className=\"p-24 cursor-pointer h-150\" elevation={3}>\n                  <h5 className=\"white-space-pre-line capitalize m-0 font-weight-500\">\n                    {board.title}\n                  </h5>\n                </Card>\n              </Link>\n            </Grid>\n          ))}\n          <Grid item lg={3} md={3} sm={12} xs={12}>\n            {shouldOpenDialog ? (\n              <ClickAwayListener\n                onClickAway={() => this.openEditorDialog(false)}\n              >\n                <Card\n                  className=\"p-24 pb-16 h-150\"\n                  elevation={3}\n                  style={{ width: \"290px\" }}\n                >\n                  <TextField\n                    onChange={this.handleChange}\n                    onKeyDown={this.handleChange}\n                    className=\"mb-12\"\n                    variant=\"outlined\"\n                    label=\"Board Title\"\n                    value={textFieldValue}\n                    autoFocus\n                    fullWidth\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => this.openEditorDialog(false)}\n                          >\n                            <Icon fontSize=\"small\">clear</Icon>\n                          </IconButton>\n                        </InputAdornment>\n                      )\n                    }}\n                  />\n                  <div className=\"flex flex-end\">\n                    <Button\n                      onClick={this.handleAddNewBoard}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Add\n                    </Button>\n                  </div>\n                </Card>\n              </ClickAwayListener>\n            ) : (\n              <Card\n                onClick={() => this.openEditorDialog(true)}\n                className=\"p-24 flex flex-middle flex-center cursor-pointer h-150\"\n                elevation={3}\n              >\n                <div className=\"text-primary text-center font-weight-500\">\n                  <h1 className=\"m-0 text-primary font-weight-normal\">+</h1>\n                  <div>Create New Board</div>\n                </div>\n              </Card>\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  getAllBoard: PropTypes.func.isRequired,\n  addNewBoard: PropTypes.func.isRequired,\n  boardList: state.scrumboard.boardList\n});\n\nexport default connect(\n  mapStateToProps,\n  { getAllBoard, addNewBoard }\n)(AppScrumBoard);\n"],"sourceRoot":""}