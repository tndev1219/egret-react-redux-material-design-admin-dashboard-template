{"version":3,"sources":["../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","app/views/CRUD/TableService.js","app/views/CRUD/MemberEditorDialog.jsx","app/views/CRUD/CrudTable.jsx"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_TableContext__WEBPACK_IMPORTED_MODULE_6__","Table","a","forwardRef","props","ref","classes","className","_props$component","component","Component","_props$padding","padding","_props$size","size","other","Object","table","useMemo","createElement","Provider","value","root","__webpack_exports__","display","width","borderCollapse","borderSpacing","name","_Table_Tablelvl2Context__WEBPACK_IMPORTED_MODULE_6__","tablelvl2","variant","TableHead","TableRow","_props$hover","hover","_props$selected","selected","useContext","head","footer","theme","color","verticalAlign","outline","&$selected","backgroundColor","palette","type","&$hover:hover","TableBody","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__","_utils_helpers__WEBPACK_IMPORTED_MODULE_7__","_internal_SwitchBase__WEBPACK_IMPORTED_MODULE_8__","Switch","_props$color","_props$edge","edge","icon","thumb","start","edgeStart","end","edgeEnd","small","concat","checkedIcon","switchBase","input","checked","disabled","track","height","overflow","boxSizing","position","flexShrink","zIndex","marginLeft","marginRight","top","left","grey","transition","transitions","create","duration","shortest","willChange","&$checked","transform","&$disabled","&$checked + $track","opacity","&$disabled + $track","colorPrimary","primary","main","&:hover","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","& $thumb","& $switchBase","boxShadow","shadows","borderRadius","getAllUser","axios","get","deleteUser","User","post","addNewUser","updateUser","MemberEditorDialog","state","email","phone","balance","age","company","address","isActive","handleChange","event","source","persist","_this","setState","defineProperty","target","handleFormSubmit","id","objectSpread","then","handleClose","generateRandomId","_this2","this","uid","data","_this3","_this$state","_this$props","open","react_default","Dialog","onClose","lib","onSubmit","Grid","container","spacing","item","sm","xs","label","onChange","validators","errorMessages","FormControlLabel","control","Button","onClick","CrudTable","rowsPerPage","page","userList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","setPage","setRowsPerPage","handleChangePage","newPage","handleDialogClose","updatePageData","handleDeleteUser","user","handleConfirmationResponse","_ref","toConsumableArray","egret","routeSegments","Card","elevation","style","whiteSpace","minWidth","TableCell","slice","map","index","key","shortid","generate","align","IconButton","Icon","TablePagination","rowsPerPageOptions","count","length","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","CRUD_MemberEditorDialog","onConfirmDialogClose","onYesClick","text"],"mappings":"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","file":"static/js/41.8567f1f7.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table',\n    width: '100%',\n    borderCollapse: 'collapse',\n    borderSpacing: 0\n  }\n};\nvar Table = React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'table' : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size\n    };\n  }, [padding, size]);\n  return React.createElement(TableContext.Provider, {\n    value: table\n  }, React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar TableHead = React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'thead' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 'none',\n      '&$selected': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.04)' // grey[100]\n        : 'rgba(255, 255, 255, 0.08)'\n      },\n      '&$hover:hover': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.07)' // grey[200]\n        : 'rgba(255, 255, 255, 0.14)'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tr' : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      head: classes.head,\n      footer: classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar TableBody = React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tbody' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport { capitalize } from '../utils/helpers';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      willChange: 'left, transform',\n      '&$checked': {\n        left: '100%',\n        transform: 'translateX(-100%)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      start: classes.edgeStart,\n      end: classes.edgeEnd\n    }[edge], {\n      small: classes[\"size\".concat(capitalize(size))]\n    }[size])\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import axios from \"axios\";\n\nexport const getAllUser = () => {\n  return axios.get(\"/api/user/all\");\n};\nexport const getUserById = id => {\n  return axios.get(\"/api/user\", { data: id });\n};\nexport const deleteUser = User => {\n  return axios.post(\"/api/user/delete\", User);\n};\nexport const addNewUser = User => {\n  return axios.post(\"/api/user/add\", User);\n};\nexport const updateUser = User => {\n  return axios.post(\"/api/user/update\", User);\n};\n","import React, { Component } from \"react\";\nimport {\n  Dialog,\n  Button,\n  Grid,\n  FormControlLabel,\n  Switch\n} from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getUserById, updateUser, addNewUser } from \"./TableService\";\nimport { generateRandomId } from \"utils\";\n\nclass MemberEditorDialog extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    balance: \"\",\n    age: \"\",\n    company: \"\",\n    address: \"\",\n    isActive: false\n  };\n\n  handleChange = (event, source) => {\n    event.persist();\n    if (source === \"switch\") {\n      this.setState({ isActive: event.target.checked });\n      return;\n    }\n\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleFormSubmit = () => {\n    let { id } = this.state;\n    if (id) {\n      updateUser({\n        ...this.state\n      }).then(() => {\n        this.props.handleClose();\n      });\n    } else {\n      addNewUser({\n        id: generateRandomId(),\n        ...this.state\n      }).then(() => {\n        this.props.handleClose();\n      });\n    }\n  };\n\n  componentWillMount() {\n    getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n  }\n\n  render() {\n    let {\n      name,\n      email,\n      phone,\n      balance,\n      age,\n      company,\n      address,\n      isActive\n    } = this.state;\n    let { open, handleClose } = this.props;\n\n    return (\n      <Dialog onClose={handleClose} open={open}>\n        <div className=\"p-24\">\n          <h4 className=\"mb-20\">Update Member</h4>\n          <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\n            <Grid className=\"mb-16\" container spacing={4}>\n              <Grid item sm={6} xs={12}>\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Name\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Email\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"email\"\n                  value={email}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Phone\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"phone\"\n                  value={phone}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Balance\"\n                  onChange={this.handleChange}\n                  type=\"number\"\n                  name=\"balance\"\n                  value={balance}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n              </Grid>\n\n              <Grid item sm={6} xs={12}>\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Age\"\n                  onChange={this.handleChange}\n                  type=\"number\"\n                  name=\"age\"\n                  value={age}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Company\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"company\"\n                  value={company}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Address\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"address\"\n                  value={address}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n\n                <FormControlLabel\n                  className=\"my-20\"\n                  control={\n                    <Switch\n                      checked={isActive}\n                      onChange={event => this.handleChange(event, \"switch\")}\n                    />\n                  }\n                  label=\"Active Customer\"\n                />\n              </Grid>\n            </Grid>\n\n            <div className=\"flex flex-space-between flex-middle\">\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Save\n              </Button>\n              <Button onClick={() => this.props.handleClose()}>Cancel</Button>\n            </div>\n          </ValidatorForm>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default MemberEditorDialog;\n","import React, { Component } from \"react\";\nimport {\n  IconButton,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Icon,\n  TablePagination,\n  Button,\n  Card\n} from \"@material-ui/core\";\nimport { getAllUser, deleteUser } from \"./TableService\";\nimport MemberEditorDialog from \"./MemberEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\n\nclass CrudTable extends Component {\n  state = {\n    rowsPerPage: 10,\n    page: 0,\n    userList: [],\n    shouldOpenEditorDialog: false,\n    shouldOpenConfirmationDialog: false\n  };\n\n  setPage = page => {\n    this.setState({ page });\n  };\n\n  setRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false\n    });\n    this.updatePageData();\n  };\n\n  handleDeleteUser = user => {\n    this.setState({\n      user,\n      shouldOpenConfirmationDialog: true\n    });\n  };\n\n  handleConfirmationResponse = () => {\n    deleteUser(this.state.user).then(() => {\n      this.handleDialogClose();\n    });\n  };\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  updatePageData = () => {\n    getAllUser().then(({ data }) => this.setState({ userList: [...data] }));\n  };\n\n  render() {\n    let {\n      rowsPerPage,\n      page,\n      userList,\n      shouldOpenConfirmationDialog,\n      shouldOpenEditorDialog\n    } = this.state;\n    return (\n      <div className=\"m-sm-30\">\n        <div  className=\"mb-sm-30\">\n          <Breadcrumb routeSegments={[{ name: \"CRUD Table\" }]} />\n        </div>\n\n        <Button\n          className=\"mb-16\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.setState({ shouldOpenEditorDialog: true })}\n        >\n          Add New Member\n        </Button>\n        <Card className=\"w-100 overflow-auto\" elevation={6}>\n          <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", minWidth: \"750px\" }}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Age</TableCell>\n                <TableCell>Balance</TableCell>\n                <TableCell>Company</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {userList\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((user, index) => (\n                  <TableRow key={shortid.generate()}>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.name}\n                    </TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.age}\n                    </TableCell>\n                    <TableCell className=\"px-0\">${user.balance}</TableCell>\n                    <TableCell className=\"px-0\" align=\"left\">\n                      {user.company}\n                    </TableCell>\n                    <TableCell className=\"px-0\">\n                      {user.isActive ? (\n                        <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\n                          active\n                        </small>\n                      ) : (\n                        <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\n                          inactive\n                        </small>\n                      )}\n                    </TableCell>\n                    <TableCell className=\"px-0 border-none\">\n                      <IconButton\n                        onClick={() =>\n                          this.setState({\n                            uid: user.id,\n                            shouldOpenEditorDialog: true\n                          })\n                        }\n                      >\n                        <Icon color=\"primary\">edit</Icon>\n                      </IconButton>\n                      <IconButton onClick={() => this.handleDeleteUser(user)}>\n                        <Icon color=\"error\">delete</Icon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n\n          <TablePagination\n            className=\"px-16\"\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={userList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\"\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\"\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.setRowsPerPage}\n          />\n\n          {shouldOpenEditorDialog && (\n            <MemberEditorDialog\n              handleClose={this.handleDialogClose}\n              open={shouldOpenEditorDialog}\n              uid={this.state.uid}\n            />\n          )}\n          {shouldOpenConfirmationDialog && (\n            <ConfirmationDialog\n              open={shouldOpenConfirmationDialog}\n              onConfirmDialogClose={this.handleDialogClose}\n              onYesClick={this.handleConfirmationResponse}\n              text=\"Are you sure to delete?\"\n            />\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default CrudTable;\n"],"sourceRoot":""}