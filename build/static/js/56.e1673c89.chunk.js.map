{"version":3,"sources":["app/views/inbox/InboxMessagList.jsx","app/views/inbox/InboxComposeDialog.jsx","app/views/inbox/InboxSidenav.jsx","app/views/inbox/InboxTopbar.jsx","app/views/inbox/AppInbox.jsx","app/views/inbox/InboxService.js"],"names":["InboxMessageList","_ref","messageList","handleCheckboxSelection","_React$useState","React","useState","_React$useState2","Object","slicedToArray","expanded","setExpanded","react_default","a","createElement","className","map","message","index","ExpansionPanel","key","id","elevation","ExpansionPanelSummary","react","Checkbox","checked","selected","onChange","event","color","IconButton","Icon","onClick","toggleExpansionPanel","Avatar","src","sender","photo","name","format","Date","date","getTime","subject","getTimeDifference","egret","menuButton","MenuItem","ExpansionPanelDetails","ReactHtmlParser","InboxComposeDialog","state","to","content","attachment","handleSubmit","console","log","_this","handleChange","persist","setState","defineProperty","target","value","handleContentChange","contentHtml","handleAttachmentSelection","files","_this$state","this","_this$props","props","open","handleClose","Dialog","onClose","maxWidth","fullWidth","react_material_ui_form_validator_lib","ref","onSubmit","onError","errors","label","type","validators","errorMessages","placeholder","Button","htmlFor","component","Fab","size","Component","InboxSidenav","setOpen","variant","ListItem","button","ListItemIcon","ListItemText","primary","Divider","inbox_InboxComposeDialog","InboxTopBar","toggleSidenav","handleMasterCheckbox","masterCheckbox","isMobile","FormControlLabel","control","AppInbox","container","createRef","shouldOpenSidenav","temp","toConsumableArray","_this2","window","windowResizeListener","addEventListener","e","removeEventListener","_this3","axios","get","then","data","width","inbox_InboxSidenav","InboxTopbar","InboxMessagList"],"mappings":"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","file":"static/js/56.e1673c89.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport {\n  IconButton,\n  Icon,\n  Checkbox,\n  Avatar,\n  MenuItem\n} from \"@material-ui/core\";\nimport { EgretMenu } from \"egret\";\nimport { format } from \"date-fns\";\nimport { getTimeDifference } from \"utils\";\n\nconst InboxMessageList = ({ messageList, handleCheckboxSelection }) => {\n  const [expanded, setExpanded] = React.useState(false);\n\n  const toggleExpansionPanel = index => {\n    if (index === expanded) setExpanded(false);\n    else setExpanded(index);\n  };\n\n  return (\n    <div className=\"mx-4 mb-4\">\n      {messageList.map((message, index) => (\n        <ExpansionPanel key={message.id} expanded={expanded === index} elevation={3}>\n          <ExpansionPanelSummary className=\"p-0 pl-8 pr-24\">\n            <div className=\"flex flex-middle w-100 py-8\">\n              {expanded !== index && (\n                <Fragment>\n                  <Checkbox\n                    checked={message.selected}\n                    onChange={event => handleCheckboxSelection(event, index)}\n                    color=\"secondary\"\n                  />\n                  <IconButton>\n                    <Icon>star_border</Icon>\n                  </IconButton>\n                </Fragment>\n              )}\n\n              <div\n                className=\"flex flex-grow-1 flex-middle flex-space-between h-100\"\n                onClick={() => toggleExpansionPanel(index)}\n              >\n                {expanded === index && (\n                  <div className=\"flex flex-middle ml-12\">\n                    <Avatar src={message.sender.photo} />\n                    <div className=\"ml-8\">\n                      <h5 className=\"mb-0 ml-4 font-weight-normal\">\n                        {message.sender.name}\n                      </h5>\n                      <small className=\"text-muted\">\n                        {format(\n                          new Date(message.date).getTime(),\n                          \"MMMM dd, yyyy\"\n                        )}\n                      </small>\n                    </div>\n                  </div>\n                )}\n\n                {expanded !== index && (\n                  <h5 className=\"mb-0 ml-4 font-size-14 text-muted font-weight-normal\">\n                    {message.sender.name}\n                  </h5>\n                )}\n\n                <p className=\"m-0\">{message.subject}</p>\n                <small className=\"text-muted\">\n                  {getTimeDifference(message.date)} ago\n                </small>\n              </div>\n              <EgretMenu\n                menuButton={\n                  <IconButton>\n                    <Icon>more_vert</Icon>\n                  </IconButton>\n                }\n              >\n                <MenuItem className=\"flex flex-middle\">\n                  <Icon className=\"mr-16\">reply</Icon> Reply\n                </MenuItem>\n                <MenuItem className=\"flex flex-middle\">\n                  <Icon className=\"mr-16\">archive</Icon> Archive\n                </MenuItem>\n                <MenuItem className=\"flex flex-middle\">\n                  <Icon className=\"mr-16\">delete</Icon> Delete\n                </MenuItem>\n              </EgretMenu>\n            </div>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <div>{ReactHtmlParser(message.message)}</div>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      ))}\n    </div>\n  );\n};\n\nexport default InboxMessageList;\n","import React, { Component } from \"react\";\nimport { Dialog, Button, IconButton, Icon, Fab } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { RichTextEditor } from \"egret\";\n\nclass InboxComposeDialog extends Component {\n  state = {\n    to: \"\",\n    subject: \"\",\n    content: \"\",\n    attachment: null\n  };\n\n  handleSubmit = event => {\n    console.log(this.state);\n  };\n\n  handleChange = event => {\n    event.persist();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleContentChange = contentHtml => {\n    this.setState({\n      content: contentHtml\n    });\n  };\n\n  handleAttachmentSelection = event => {\n    this.setState({\n      attachment: event.target.files[0]\n    });\n  };\n\n  render() {\n    let { to, subject, content, attachment } = this.state;\n    let { open, handleClose } = this.props;\n\n    return (\n      <Dialog open={open} onClose={handleClose} maxWidth=\"md\" fullWidth={true}>\n        {/* <RichTextEditor placeholder=\"insert text here...\" /> */}\n        <div className=\"inbox-form p-24\">\n          <ValidatorForm\n            ref=\"form\"\n            onSubmit={this.handleSubmit}\n            onError={errors => null}\n          >\n            <TextValidator\n              className=\"mb-16 w-100\"\n              label=\"To\"\n              onChange={this.handleChange}\n              type=\"email\"\n              name=\"to\"\n              value={to}\n              validators={[\"required\", \"isEmail\"]}\n              errorMessages={[\"this field is required\", \"email is not valid\"]}\n            />\n            <TextValidator\n              className=\"mb-16 w-100\"\n              label=\"Subject\"\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"subject\"\n              value={subject}\n              validators={[\"required\"]}\n              errorMessages={[\"this field is required\"]}\n            />\n            <RichTextEditor\n              content={content}\n              handleContentChange={this.handleContentChange}\n              placeholder=\"insert text here...\"\n            />\n            <div className=\"mt-16 flex flex-wrap flex-space-between\">\n              <Button onClick={handleClose}>Cancel</Button>\n\n              <div className=\"flex flex-middle\">\n                {attachment && <p className=\"mr-24\">{attachment.name}</p>}\n                <label htmlFor=\"attachment\">\n                  <IconButton className=\"mr-8\" component=\"span\">\n                    <Icon>attachment</Icon>\n                  </IconButton>\n                </label>\n                <input\n                  onChange={this.handleAttachmentSelection}\n                  className=\"display-none\"\n                  id=\"attachment\"\n                  type=\"file\"\n                />\n                <Fab size=\"medium\" color=\"secondary\" type=\"submit\">\n                  <Icon>send</Icon>\n                </Fab>\n              </div>\n            </div>\n          </ValidatorForm>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default InboxComposeDialog;\n","import React from \"react\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  Icon,\n  Button\n} from \"@material-ui/core\";\nimport InboxComposeDialog from \"./InboxComposeDialog\";\n\nconst InboxSidenav = () => {\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"mr-4 bg-default\">\n      <Button\n        onClick={() => setOpen(true)}\n        variant=\"contained\"\n        className=\"py-8 bg-error w-100\"\n      >\n        Compose\n      </Button>\n      <ListItem button>\n        <ListItemIcon>\n          <Icon>inbox</Icon>\n        </ListItemIcon>\n        <ListItemText primary=\"Inbox\" />\n      </ListItem>\n      <ListItem button>\n        <ListItemIcon>\n          <Icon>folder_special</Icon>\n        </ListItemIcon>\n        <ListItemText primary=\"Starred\" />\n      </ListItem>\n      <ListItem button>\n        <ListItemIcon>\n          <Icon>send</Icon>\n        </ListItemIcon>\n        <ListItemText primary=\"Sent\" />\n      </ListItem>\n      <ListItem button>\n        <ListItemIcon>\n          <Icon>inbox</Icon>\n        </ListItemIcon>\n        <ListItemText primary=\"Inbox\" />\n      </ListItem>\n      <ListItem button>\n        <ListItemIcon>\n          <Icon>error</Icon>\n        </ListItemIcon>\n        <ListItemText primary=\"Spam\" />\n      </ListItem>\n\n      <Divider />\n\n      <ListItem button>\n        <ListItemIcon>\n          <Icon color=\"primary\">people</Icon>\n        </ListItemIcon>\n        <ListItemText primary=\"Social\" />\n      </ListItem>\n      <ListItem button>\n        <ListItemIcon>\n          <Icon color=\"secondary\">local_offer</Icon>\n        </ListItemIcon>\n        <ListItemText primary=\"Promotions\" />\n      </ListItem>\n      <ListItem button>\n        <ListItemIcon>\n          <Icon color=\"secondary\">forums</Icon>\n        </ListItemIcon>\n        <ListItemText primary=\"Forums\" />\n      </ListItem>\n\n      <InboxComposeDialog open={open} handleClose={handleClose} />\n    </div>\n  );\n};\n\nexport default InboxSidenav;\n","import React from \"react\";\nimport {\n  FormControlLabel,\n  Checkbox,\n  IconButton,\n  Icon\n} from \"@material-ui/core\";\nimport { isMobile } from \"utils\";\n\nconst InboxTopBar = ({\n  toggleSidenav,\n  handleMasterCheckbox,\n  masterCheckbox\n}) => {\n  return (\n    <div className=\"inbox__topbar py-4 mx-4 flex flex-middle position-relative bg-primary\">\n      {isMobile() && (\n        <IconButton onClick={toggleSidenav}>\n          <Icon>short_text</Icon>\n        </IconButton>\n      )}\n      <FormControlLabel\n        className=\"text-white ml-4\"\n        control={\n          <Checkbox\n            checked={masterCheckbox}\n            onChange={handleMasterCheckbox}\n            color=\"secondary\"\n          />\n        }\n        label=\"All\"\n      />\n      <IconButton>\n        <Icon className=\"text-white\">delete</Icon>\n      </IconButton>\n      <IconButton>\n        <Icon className=\"text-white\">folder_special</Icon>\n      </IconButton>\n      <IconButton>\n        <Icon className=\"text-white\">archive</Icon>\n      </IconButton>\n      <IconButton>\n        <Icon className=\"text-white\">error</Icon>\n      </IconButton>\n    </div>\n  );\n};\n\nexport default InboxTopBar;\n","import React, { Component } from \"react\";\nimport {\n  EgretSidenavContainer,\n  EgretSidenav,\n  EgretSidenavContent\n} from \"egret\";\nimport InboxMessageList from \"./InboxMessagList\";\nimport { isMobile } from \"utils\";\nimport InboxSidenav from \"./InboxSidenav\";\nimport InboxTopBar from \"./InboxTopbar\";\nimport { getAllMessage } from \"./InboxService\";\n\nclass AppInbox extends Component {\n  container = React.createRef();\n  windowResizeListener;\n  state = {\n    shouldOpenSidenav: true,\n    masterCheckbox: false,\n    messageList: []\n  };\n\n  toggleSidenav = () => {\n    this.setState({ shouldOpenSidenav: !this.state.shouldOpenSidenav });\n  };\n\n  handleMasterCheckbox = event => {\n    let temp = this.state.messageList;\n    let isChecked = event.target.checked;\n    if (isChecked) {\n      temp.map(message => {\n        message.selected = true;\n        return message;\n      });\n      this.setState({\n        messageList: [...temp],\n        masterCheckbox: event.target.checked\n      });\n    } else {\n      temp.map(message => {\n        message.selected = false;\n        return message;\n      });\n      this.setState({\n        messageList: [...temp],\n        masterCheckbox: event.target.checked\n      });\n    }\n  };\n\n  handleCheckboxSelection = (event, index) => {\n    event.persist();\n    let temp = this.state.messageList;\n    temp[index].selected = event.target.checked;\n    this.setState({\n      messageList: [...temp]\n    });\n  };\n\n  componentWillMount() {\n    if (isMobile()) this.setState({ shouldOpenSidenav: false });\n    if (window)\n      this.windowResizeListener = window.addEventListener(\"resize\", e => {\n        if (isMobile()) this.setState({ shouldOpenSidenav: false });\n        else this.setState({ shouldOpenSidenav: true });\n      });\n  }\n\n  componentWillUnmount() {\n    if (window) window.removeEventListener(\"resize\", this.windowResizeListener);\n  }\n\n  componentDidMount() {\n    getAllMessage().then(data => {\n      this.setState({\n        messageList: data.data\n      });\n    });\n  }\n\n  render() {\n    let { masterCheckbox } = this.state;\n    return (\n      <div className=\"inbox flex m-sm-30\">\n        <div className=\"inbox__sidenav w-100\">\n          <EgretSidenavContainer>\n            <EgretSidenav\n              width=\"220px\"\n              toggleSidenav={this.toggleSidenav}\n              open={this.state.shouldOpenSidenav}\n            >\n              <InboxSidenav />\n            </EgretSidenav>\n            <EgretSidenavContent>\n              <InboxTopBar\n                masterCheckbox={masterCheckbox}\n                handleMasterCheckbox={this.handleMasterCheckbox}\n                toggleSidenav={this.toggleSidenav}\n              />\n              <InboxMessageList\n                handleCheckboxSelection={this.handleCheckboxSelection}\n                messageList={this.state.messageList}\n              />\n            </EgretSidenavContent>\n          </EgretSidenavContainer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppInbox;\n","import axios from \"axios\";\n\nexport const getAllMessage = () => {\n  return axios.get(\"/api/inbox/all\");\n};\nexport const getMessageById = id => {\n  return axios.get(\"/api/inbox\", { data: id });\n};\nexport const deleteMessage = message => {\n  return axios.post(\"/api/inbox/delete\", message);\n};\nexport const addNewMessage = message => {\n  return axios.post(\"/api/inbox/add\", message);\n};\nexport const updateMessage = message => {\n  return axios.post(\"/api/inbox/update\", message);\n};\n"],"sourceRoot":""}