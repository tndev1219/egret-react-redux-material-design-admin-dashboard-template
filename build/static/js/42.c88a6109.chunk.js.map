{"version":3,"sources":["../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","app/views/material-kit/tables/SimpleTable.jsx","app/views/material-kit/tables/PaginationTable.jsx","app/views/material-kit/tables/AppTable.jsx"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_TableContext__WEBPACK_IMPORTED_MODULE_6__","Table","a","forwardRef","props","ref","classes","className","_props$component","component","Component","_props$padding","padding","_props$size","size","other","Object","table","useMemo","createElement","Provider","value","root","__webpack_exports__","display","width","borderCollapse","borderSpacing","name","_Table_Tablelvl2Context__WEBPACK_IMPORTED_MODULE_6__","tablelvl2","variant","TableHead","TableRow","_props$hover","hover","_props$selected","selected","useContext","head","footer","theme","color","verticalAlign","outline","&$selected","backgroundColor","palette","type","&$hover:hover","TableBody","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","subscribarList","date","amount","status","company","SimpleTable","style","whiteSpace","map","subscriber","index","key","align","PaginationTable","_React$useState","React","useState","_React$useState2","slicedToArray","rowsPerPage","setRowsPerPage","_React$useState3","_React$useState4","page","setPage","react_default","TableCell","slice","IconButton","Icon","TablePagination","rowsPerPageOptions","count","length","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","event","newPage","onChangeRowsPerPage","target","AppTable","egret","routeSegments","path","title","tables_PaginationTable"],"mappings":"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","file":"static/js/42.c88a6109.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table',\n    width: '100%',\n    borderCollapse: 'collapse',\n    borderSpacing: 0\n  }\n};\nvar Table = React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'table' : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size\n    };\n  }, [padding, size]);\n  return React.createElement(TableContext.Provider, {\n    value: table\n  }, React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar TableHead = React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'thead' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 'none',\n      '&$selected': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.04)' // grey[100]\n        : 'rgba(255, 255, 255, 0.08)'\n      },\n      '&$hover:hover': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.07)' // grey[200]\n        : 'rgba(255, 255, 255, 0.14)'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tr' : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      head: classes.head,\n      footer: classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar TableBody = React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tbody' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import React from \"react\";\nimport {\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  IconButton,\n  Icon,\n  TableRow\n} from \"@material-ui/core\";\n\nconst subscribarList = [\n  {\n    name: \"john doe\",\n    date: \"18 january, 2019\",\n    amount: 1000,\n    status: \"close\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"kessy bryan\",\n    date: \"10 january, 2019\",\n    amount: 9000,\n    status: \"open\",\n    company: \"My Fintech LTD.\"\n  },\n  {\n    name: \"james cassegne\",\n    date: \"8 january, 2019\",\n    amount: 5000,\n    status: \"close\",\n    company: \"Collboy Tech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  }\n];\n\nconst SimpleTable = () => {\n  return (\n    <div className=\"w-100 overflow-auto\">\n      <Table style={{ whiteSpace: \"pre\" }}>\n        <TableHead>\n          <TableRow>\n            <TableCell className=\"px-0\">Name</TableCell>\n            <TableCell className=\"px-0\">Company</TableCell>\n            <TableCell className=\"px-0\">Start Date</TableCell>\n            <TableCell className=\"px-0\">Status</TableCell>\n            <TableCell className=\"px-0\">Amount</TableCell>\n            <TableCell className=\"px-0\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {subscribarList.map((subscriber, index) => (\n            <TableRow key={index}>\n              <TableCell className=\"px-0 capitalize\" align=\"left\">\n                {subscriber.name}\n              </TableCell>\n              <TableCell className=\"px-0 capitalize\" align=\"left\">\n                {subscriber.company}\n              </TableCell>\n              <TableCell className=\"px-0 capitalize\" align=\"left\">\n                {subscriber.date}\n              </TableCell>\n              <TableCell className=\"px-0 capitalize\">\n                {subscriber.status}\n              </TableCell>\n              <TableCell className=\"px-0 capitalize\">\n                ${subscriber.amount}\n              </TableCell>\n              <TableCell className=\"px-0\">\n                <IconButton>\n                  <Icon color=\"error\">close</Icon>\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default SimpleTable;\n","import React from \"react\";\nimport {\n  IconButton,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Icon,\n  TablePagination\n} from \"@material-ui/core\";\n\nconst subscribarList = [\n  {\n    name: \"john doe\",\n    date: \"18 january, 2019\",\n    amount: 1000,\n    status: \"close\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"kessy bryan\",\n    date: \"10 january, 2019\",\n    amount: 9000,\n    status: \"open\",\n    company: \"My Fintech LTD.\"\n  },\n  {\n    name: \"kessy bryan\",\n    date: \"10 january, 2019\",\n    amount: 9000,\n    status: \"open\",\n    company: \"My Fintech LTD.\"\n  },\n  {\n    name: \"james cassegne\",\n    date: \"8 january, 2019\",\n    amount: 5000,\n    status: \"close\",\n    company: \"Collboy Tech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  },\n  {\n    name: \"lucy brown\",\n    date: \"1 january, 2019\",\n    amount: 89000,\n    status: \"open\",\n    company: \"ABC Fintech LTD.\"\n  }\n];\n\nconst PaginationTable = () => {\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [page, setPage] = React.useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n  };\n\n  return (\n    <div className=\"w-100 overflow-auto\">\n      <Table style={{ whiteSpace: \"pre\" }}>\n        <TableHead>\n          <TableRow>\n            <TableCell className=\"px-0\">Name</TableCell>\n            <TableCell className=\"px-0\">Company</TableCell>\n            <TableCell className=\"px-0\">Start Date</TableCell>\n            <TableCell className=\"px-0\">Status</TableCell>\n            <TableCell className=\"px-0\">Amount</TableCell>\n            <TableCell className=\"px-0\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {subscribarList\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((subscriber, index) => (\n              <TableRow key={index}>\n                <TableCell className=\"px-0 capitalize\" align=\"left\">\n                  {subscriber.name}\n                </TableCell>\n                <TableCell className=\"px-0 capitalize\" align=\"left\">\n                  {subscriber.company}\n                </TableCell>\n                <TableCell className=\"px-0 capitalize\" align=\"left\">\n                  {subscriber.date}\n                </TableCell>\n                <TableCell className=\"px-0 capitalize\">\n                  {subscriber.status}\n                </TableCell>\n                <TableCell className=\"px-0 capitalize\">\n                  ${subscriber.amount}\n                </TableCell>\n                <TableCell className=\"px-0\">\n                  <IconButton>\n                    <Icon color=\"error\">close</Icon>\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n\n      <TablePagination\n        className=\"px-16\"\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={subscribarList.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          \"aria-label\": \"Previous Page\"\n        }}\n        nextIconButtonProps={{\n          \"aria-label\": \"Next Page\"\n        }}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </div>\n  );\n};\n\nexport default PaginationTable;\n","import React from \"react\";\nimport SimpleTable from \"./SimpleTable\";\nimport PaginationTable from \"./PaginationTable\";\nimport { Breadcrumb, SimpleCard } from \"egret\";\n\nconst AppTable = () => {\n  return (\n    <div className=\"m-sm-30\">\n      <div  className=\"mb-sm-30\">\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Material\", path: \"/material\" },\n            { name: \"Table\" }\n          ]}\n        />\n      </div>\n      <SimpleCard title=\"Simple Table\">\n        <SimpleTable />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Pagination Table\">\n        <PaginationTable />\n      </SimpleCard>\n    </div>\n  );\n};\n\nexport default AppTable;\n"],"sourceRoot":""}