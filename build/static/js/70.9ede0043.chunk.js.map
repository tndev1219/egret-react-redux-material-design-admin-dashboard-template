{"version":3,"sources":["app/views/forms/HorizontalStepper.jsx","app/views/forms/VerticalStepper.jsx","app/views/forms/WizardForm.jsx"],"names":["HorizontalStepper","_React$useState","React","useState","_React$useState2","Object","slicedToArray","activeStep","setActiveStep","steps","react_default","a","createElement","Stepper","alternativeLabel","map","label","Step","key","StepLabel","length","className","Icon","Button","variant","color","onClick","stepIndex","TextField","getStepContent","disabled","prevActiveStep","useStyles","makeStyles","theme","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","VerticalStepper","classes","handleNext","handleBack","orientation","index","StepContent","step","Paper","square","elevation","Typography","WizardForm","egret","title"],"mappings":"mMA2Be,SAASA,IAAoB,IAAAC,EACNC,IAAMC,SAAS,GADTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACnCM,EADmCH,EAAA,GACvBI,EADuBJ,EAAA,GAEpCK,EAlBC,CAAC,aAAc,YAAa,WAgCnC,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASN,WAAYA,EAAYO,kBAAgB,GAC9CL,EAAMM,IAAI,SAAAC,GAAK,OACdN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,IAAKF,GACTN,EAAAC,EAAAC,cAACO,EAAA,EAAD,KAAYH,OAIlBN,EAAAC,EAAAC,cAAA,WACGL,IAAeE,EAAMW,OACpBV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACU,EAAA,EAAD,aADF,IACoBZ,EAAAC,EAAAC,cAAA,QAAMS,UAAU,QAAhB,SAEpBX,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAnBpC,WAClBlB,EAAc,KAkBN,UAKFE,EAAAC,EAAAC,cAAA,WAjDV,SAAwBe,GACtB,OAAQA,GACN,KAAK,EACH,OAAOjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,MAAM,eAC1B,KAAK,EACH,OAAON,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,MAAM,cAC1B,KAAK,EACH,OAAON,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,MAAM,YAC1B,QACE,MAAO,IAyCAa,CAAetB,GAChBG,EAAAC,EAAAC,cAAA,OAAKS,UAAU,SACbX,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNK,SAAyB,IAAfvB,EACVmB,QAnCK,WACjBlB,EAAc,SAAAuB,GAAc,OAAIA,EAAiB,MA8BvC,QAQArB,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEF,UAAU,QACVG,QAAQ,YACRC,MAAM,UACNC,QA/CK,WACjBlB,EAAc,SAAAuB,GAAc,OAAIA,EAAiB,MAgDpCxB,IAAeE,EAAMW,OAAS,EAAI,SAAW,sDCnExDY,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,OAETC,OAAQ,CACNC,UAAWJ,EAAMK,QAAQ,GACzBC,YAAaN,EAAMK,QAAQ,IAE7BE,iBAAkB,CAChBC,aAAcR,EAAMK,QAAQ,IAE9BI,eAAgB,CACdC,QAASV,EAAMK,QAAQ,OAqBZ,SAASM,IACtB,IAAMC,EAAUd,IADwB/B,EAEJC,IAAMC,SAAS,GAFXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEjCM,EAFiCH,EAAA,GAErBI,EAFqBJ,EAAA,GAGlCK,EAnBC,CAAC,2BAA4B,qBAAsB,gBAqB1D,SAASsC,IACPvC,EAAc,SAAAuB,GAAc,OAAIA,EAAiB,IAGnD,SAASiB,IACPxC,EAAc,SAAAuB,GAAc,OAAIA,EAAiB,IAOnD,OACErB,EAAAC,EAAAC,cAAA,OAAKS,UAAWyB,EAAQX,MACtBzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASN,WAAYA,EAAY0C,YAAY,YAC1CxC,EAAMM,IAAI,SAACC,EAAOkC,GAAR,OACTxC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,IAAKF,GACTN,EAAAC,EAAAC,cAACO,EAAA,EAAD,KAAYH,GACZN,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACEzC,EAAAC,EAAAC,cAAA,WArCd,SAAwBwC,GACtB,OAAQA,GACN,KAAK,EACH,OAAO1C,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,MAAM,eAC1B,KAAK,EACH,OAAON,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,MAAM,cAC1B,KAAK,EACH,OAAON,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,MAAM,YAC1B,QACE,MAAO,IA4BOa,CAAeqB,IACrBxC,EAAAC,EAAAC,cAAA,OAAKS,UAAWyB,EAAQL,kBACtB/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEO,SAAyB,IAAfvB,EACVmB,QAASsB,EACT3B,UAAWyB,EAAQT,QAHrB,QAOA3B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QAASqB,EACT1B,UAAWyB,EAAQT,QAElB9B,IAAeE,EAAMW,OAAS,EAAI,SAAW,eAQ3Db,IAAeE,EAAMW,QACpBV,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAOC,QAAM,EAACC,UAAW,EAAGlC,UAAWyB,EAAQH,gBAC7CjC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,8CACA9C,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQG,QAtChB,WACElB,EAAc,IAqCsBa,UAAWyB,EAAQT,QAAjD,WC9EKoB,UAdI,WACjB,OACE/C,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACbX,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAYC,MAAM,sBAChBjD,EAAAC,EAAAC,cAACZ,EAAD,OAEFU,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UACfX,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAYC,MAAM,oBAChBjD,EAAAC,EAAAC,cAACiC,EAAD","file":"static/js/70.9ede0043.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  TextField,\n  Icon,\n  Button,\n  StepLabel,\n  Step,\n  Stepper\n} from \"@material-ui/core\";\n\nfunction getSteps() {\n  return [\"First Name\", \"Last Name\", \"Address\"];\n}\n\nfunction getStepContent(stepIndex) {\n  switch (stepIndex) {\n    case 0:\n      return <TextField label=\"First Name\"></TextField>;\n    case 1:\n      return <TextField label=\"Last Name\"></TextField>;\n    case 2:\n      return <TextField label=\"Address\"></TextField>;\n    default:\n      return \"\";\n  }\n}\n\nexport default function HorizontalStepper() {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <div className=\"flex flex-middle mb-16\">\n              <Icon>done</Icon> <span className=\"ml-8\">Done</span>\n            </div>\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleReset}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            {getStepContent(activeStep)}\n            <div className=\"pt-24\">\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                disabled={activeStep === 0}\n                onClick={handleBack}\n              >\n                Back\n              </Button>\n              <Button\n                className=\"ml-16\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n              >\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  TextField,\n  Typography,\n  Paper,\n  Button,\n  StepContent,\n  StepLabel,\n  Step,\n  Stepper,\n  makeStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"90%\"\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction getSteps() {\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <TextField label=\"First Name\"></TextField>;\n    case 1:\n      return <TextField label=\"Last Name\"></TextField>;\n    case 2:\n      return <TextField label=\"Address\"></TextField>;\n    default:\n      return \"\";\n  }\n}\n\nexport default function VerticalStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <div>{getStepContent(index)}</div>\n              <div className={classes.actionsContainer}>\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    Back\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                  </Button>\n                </div>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>All steps completed - you&apos;re finished</Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </Paper>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { SimpleCard } from \"egret\";\nimport HorizontalStepper from \"./HorizontalStepper\";\nimport VerticalStepper from \"./VerticalStepper\";\n\nconst WizardForm = () => {\n  return (\n    <div className=\"m-sm-30\">\n      <SimpleCard title=\"Horizontal Stepper\">\n        <HorizontalStepper></HorizontalStepper>\n      </SimpleCard>\n      <div className=\"py-12\"></div>\n      <SimpleCard title=\"Vertical Stepper\">\n        <VerticalStepper></VerticalStepper>\n      </SimpleCard>\n    </div>\n  );\n};\n\nexport default WizardForm;\n"],"sourceRoot":""}