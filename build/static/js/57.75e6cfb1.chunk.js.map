{"version":3,"sources":["app/views/invoice/InvoiceService.js","app/views/invoice/InvoiceViewer.jsx","app/views/invoice/InvoiceEditor.jsx","app/views/invoice/InvoiceDetails.jsx"],"names":["__webpack_require__","d","__webpack_exports__","getAllInvoice","getInvoiceById","deleteInvoice","addInvoice","updateInvoice","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","axios","get","id","data","invoice","post","InvoiceViewer","state","subTotalCost","_this2","this","props","match","params","then","res","setState","Object","objectSpread","_this3","_this$state","orderNo","buyer","seller","_this$state$item","item","invoiceItemList","status","vat","date","react_default","a","createElement","className","react_router_dom","to","IconButton","Icon","Button","variant","color","onClick","toggleInvoiceEditor","window","print","format","Date","getTime","Divider","name","address","Card","elevation","Table","TableHead","TableRow","TableCell","TableBody","map","index","unit","price","key","align","Component","withRouter","InvoiceEditor","currency","loading","generateRandomId","tempId","Math","random","toString","substr","length","_this","handleChange","event","persist","defineProperty","target","value","handleSellerBuyerChange","fieldName","handleIvoiceListChange","tempItemList","toConsumableArray","element","i","addItemToInvoiceList","push","deleteItemFromInvoiceList","splice","handleDateChange","handleSubmit","tempState","isNewInvoice","history","concat","lib","ref","onSubmit","onError","errors","type","disabled","label","onChange","fullWidth","validators","errorMessages","FormControl","component","RadioGroup","aria-label","FormControlLabel","control","Radio","labelPlacement","MuiPickersUtilsProvider","utils","DateFnsUtils","DatePicker","margin","inputVariant","autoOk","KeyboardButtonProps","Grid","container","justify","spacing","multiline","rowsMax","style","marginTop","InvoiceDetails","showInvoiceEditor","invoice_InvoiceEditor","invoice_InvoiceViewer"],"mappings":"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","file":"static/js/57.75e6cfb1.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const getAllInvoice = () => {\n    return axios.get(\"/api/invoices/all\")\n}\nexport const getInvoiceById = (id) => {\n    return axios.get(\"/api/invoices\", { data: id })\n}\nexport const deleteInvoice = (invoice) => {\n    return axios.post(\"/api/invoices/delete\", invoice)\n}\nexport const addInvoice = (invoice) => {\n    return axios.post(\"/api/invoices/add\", invoice)\n}\nexport const updateInvoice = (invoice) => {\n    return axios.post(\"/api/invoices/update\", invoice)\n}","import React, { Component } from \"react\";\nimport {\n  Icon,\n  Button,\n  Divider,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  IconButton,\n  Card\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { getInvoiceById } from \"./InvoiceService\";\nimport { format } from \"date-fns\";\nimport { withRouter } from \"react-router-dom\";\n\nclass InvoiceViewer extends Component {\n  state = {};\n  subTotalCost = 0;\n\n  componentWillMount() {\n    getInvoiceById(this.props.match.params.id).then(res => {\n      this.setState({ ...res.data });\n    });\n  }\n\n  render() {\n    this.subTotalCost = 0;\n    let {\n      orderNo,\n      buyer,\n      seller,\n      item: invoiceItemList = [],\n      status,\n      vat,\n      date\n    } = this.state;\n\n    return (\n      <div className=\"invoice-viewer py-16\">\n        <div className=\"viewer_actions px-16 mb-20 flex flex-middle flex-space-between\">\n          <Link to=\"/invoice/list\">\n            <IconButton>\n              <Icon>arrow_back</Icon>\n            </IconButton>\n          </Link>\n          <div>\n            <Button\n              className=\"mr-16 py-8\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => this.props.toggleInvoiceEditor()}\n            >\n              Edit Invoice\n            </Button>\n            <Button\n              onClick={() => window.print()}\n              className=\"py-8\"\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Print Invoice\n            </Button>\n          </div>\n        </div>\n\n        <div id=\"print-area\">\n          <div className=\"viewer__order-info px-16 mb-16 flex flex-space-between\">\n            <div>\n              <h5 className=\"mb-8\">Order Info</h5>\n              <p className=\"mb-16\">Order Number</p>\n              <p className=\"mb-0\"># {orderNo}</p>\n            </div>\n            <div className=\"text-align-right\">\n              <h5 className=\"font-weight-normal mb-16 capitalize\">\n                <strong>Order status:</strong> {status}\n              </h5>\n              <h5 className=\"font-weight-normal capitalize\">\n                <strong>Order date: </strong>{\" \"}\n                <span>\n                  {date\n                    ? format(new Date(date).getTime(), \"MMMM dd, yyyy\")\n                    : \"\"}\n                </span>\n              </h5>\n            </div>\n          </div>\n\n          <Divider />\n\n          <div className=\"viewer__billing-info px-16 py-20 flex flex-space-between\">\n            <div>\n              <h5 className=\"mb-8\">Bill From</h5>\n              <p className=\"mb-16\">{seller ? seller.name : null}</p>\n              <p className=\"mb-0 white-space-pre-line\">\n                {seller ? seller.address : null}\n              </p>\n            </div>\n            <div className=\"text-align-right w-100\">\n              <h5 className=\"mb-8\">Bill To</h5>\n              <p className=\"mb-16\">{buyer ? buyer.name : null}</p>\n              <p className=\"mb-0 white-space-pre-line\">\n                {buyer ? buyer.address : null}\n              </p>\n            </div>\n            <div />\n          </div>\n\n          <Card className=\"mb-16\" elevation={0}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell className=\"pl-sm-24\">#</TableCell>\n                  <TableCell className=\"px-0\">Item Name</TableCell>\n                  <TableCell className=\"px-0\">Unit Price</TableCell>\n                  <TableCell className=\"px-0\">Unit</TableCell>\n                  <TableCell className=\"px-0\">Cost</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {invoiceItemList.map((item, index) => {\n                  this.subTotalCost += item.unit * item.price;\n                  return (\n                    <TableRow key={index}>\n                      <TableCell className=\"pl-sm-24 capitalize\" align=\"left\">\n                        {index + 1}\n                      </TableCell>\n                      <TableCell className=\"pl-0 capitalize\" align=\"left\">\n                        {item.name}\n                      </TableCell>\n                      <TableCell className=\"pl-0 capitalize\" align=\"left\">\n                        {item.price}\n                      </TableCell>\n                      <TableCell className=\"pl-0 capitalize\">\n                        {item.unit}\n                      </TableCell>\n                      <TableCell className=\"pl-0\">\n                        {item.unit * item.price}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </Card>\n\n          <div className=\"px-16 flex flex-end\">\n            <div className=\"flex\">\n              <div className=\"pr-48\">\n                <p className=\"mb-16\">Sub Total:</p>\n                <p className=\"mb-16\">Vat(%):</p>\n                <strong>\n                  <p>Grand Total:</p>\n                </strong>\n              </div>\n              <div>\n                <p className=\"mb-16\">{this.subTotalCost}</p>\n                <p className=\"mb-16\">{vat}</p>\n                <p>\n                  <strong>\n                    ${(this.subTotalCost += (this.subTotalCost * vat) / 100)}\n                  </strong>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(InvoiceViewer);\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Radio,\n  FormControl,\n  FormControlLabel,\n  Divider,\n  RadioGroup,\n  Grid,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody\n} from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { getInvoiceById, addInvoice, updateInvoice } from \"./InvoiceService\";\nimport { withRouter } from \"react-router-dom\";\n\nclass InvoiceEditor extends Component {\n  subTotalCost = 0;\n  state = {\n    id: \"\",\n    orderNo: \"\",\n    buyer: {\n      name: \"\",\n      address: \"\"\n    },\n    seller: {\n      name: \"\",\n      address: \"\"\n    },\n    item: [],\n    status: \"\",\n    vat: \"\",\n    date: new Date(),\n    currency: \"\",\n    loading: false\n  };\n\n  componentDidMount() {\n    if (!this.props.isNewInvoice)\n      getInvoiceById(this.props.match.params.id).then(res => {\n        this.setState({ ...res.data });\n      });\n    else {\n      this.generateRandomId();\n    }\n  }\n\n  generateRandomId = () => {\n    let tempId = Math.random().toString();\n    let id = tempId.substr(2, tempId.length - 1);\n    this.setState({ id });\n  };\n\n  handleChange = event => {\n    event.persist();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSellerBuyerChange = (event, fieldName) => {\n    event.persist();\n    this.setState({\n      [fieldName]: {\n        ...this.state[fieldName],\n        [event.target.name]: event.target.value\n      }\n    });\n  };\n\n  handleIvoiceListChange = (event, index) => {\n    let tempItemList = [...this.state.item];\n    tempItemList.map((element, i) => {\n      if (index === i) element[event.target.name] = event.target.value;\n      return element;\n    });\n\n    this.setState({\n      item: tempItemList\n    });\n  };\n\n  addItemToInvoiceList = () => {\n    let tempItemList = [...this.state.item];\n    tempItemList.push({\n      name: \"\",\n      unit: \"\",\n      price: \"\"\n    });\n    this.setState({\n      item: tempItemList\n    });\n  };\n\n  deleteItemFromInvoiceList = index => {\n    let tempItemList = [...this.state.item];\n    tempItemList.splice(index, 1);\n    this.setState({\n      item: tempItemList\n    });\n  };\n\n  handleDateChange = date => {\n    this.setState({ date });\n  };\n\n  handleSubmit = () => {\n    this.setState({ loading: true });\n    let tempState = this.state;\n    delete tempState.loading;\n    if (this.props.isNewInvoice)\n      addInvoice(tempState).then(() => {\n        this.setState({ loading: false });\n        this.props.history.push(`/invoice/${this.state.id}`);\n        this.props.toggleInvoiceEditor();\n      });\n    else\n      updateInvoice(tempState).then(() => {\n        this.setState({ loading: false });\n        this.props.toggleInvoiceEditor();\n      });\n  };\n\n  render() {\n    this.subTotalCost = 0;\n    let {\n      orderNo,\n      buyer,\n      seller,\n      item: invoiceItemList = [],\n      status,\n      vat,\n      date,\n      currency,\n      loading\n    } = this.state;\n\n    return (\n      <div className=\"invoice-viewer py-16\">\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleSubmit}\n          onError={errors => this.handleSubmit}\n        >\n          <div className=\"viewer_actions px-16 flex flex-end\">\n            <div className=\"mb-24\">\n              <Button\n                type=\"button\"\n                className=\"mr-16 py-8\"\n                variant=\"text\"\n                onClick={() => this.props.toggleInvoiceEditor()}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                className=\"py-8\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={loading}\n              >\n                Save\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"viewer__order-info px-16 mb-16 flex flex-space-between\">\n            <div>\n              <h5 className=\"mb-8\">Order Info</h5>\n              <p className=\"mb-16\">Order Number</p>\n              <TextValidator\n                label=\"Order No.\"\n                onChange={this.handleChange}\n                type=\"text\"\n                fullWidth\n                name=\"orderNo\"\n                value={orderNo}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n            </div>\n            <div>\n              <FormControl component=\"fieldset\" className=\"w-100 mb-16\">\n                <RadioGroup\n                  aria-label=\"status\"\n                  name=\"status\"\n                  value={status}\n                  onChange={this.handleChange}\n                >\n                  <FormControlLabel\n                    className=\"h-32\"\n                    value=\"pending\"\n                    control={<Radio color=\"secondary\" />}\n                    label=\"Pending\"\n                    labelPlacement=\"start\"\n                  />\n                  <FormControlLabel\n                    className=\"h-32\"\n                    value=\"processing\"\n                    control={<Radio color=\"secondary\" />}\n                    label=\"Processing\"\n                    labelPlacement=\"start\"\n                  />\n                  <FormControlLabel\n                    className=\"h-32\"\n                    value=\"delivered\"\n                    control={<Radio color=\"secondary\" />}\n                    label=\"Delivered\"\n                    labelPlacement=\"start\"\n                  />\n                </RadioGroup>\n              </FormControl>\n\n              <div className=\"text-align-right\">\n                <h5 className=\"font-weight-normal\">\n                  <strong>Order date: </strong>\n                </h5>\n              </div>\n\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  margin=\"none\"\n                  id=\"mui-pickers-date\"\n                  label=\"Order Date\"\n                  inputVariant=\"standard\"\n                  type=\"text\"\n                  autoOk={true}\n                  value={date}\n                  fullWidth\n                  format=\"MMMM dd, yyyy\"\n                  onChange={this.handleDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\"\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </div>\n          </div>\n\n          <Divider />\n\n          <Grid\n            className=\"px-16 py-20\"\n            container\n            justify=\"space-between\"\n            spacing={4}\n          >\n            <Grid item>\n              <div>\n                <h5 className=\"mb-20\">Bill From</h5>\n                <TextValidator\n                  className=\"mb-20\"\n                  label=\"Seller Name\"\n                  onChange={event =>\n                    this.handleSellerBuyerChange(event, \"seller\")\n                  }\n                  type=\"text\"\n                  name=\"name\"\n                  fullWidth\n                  value={seller ? seller.name : null}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n                <TextValidator\n                  label=\"Seller Name\"\n                  type=\"text\"\n                  onChange={event =>\n                    this.handleSellerBuyerChange(event, \"seller\")\n                  }\n                  name=\"address\"\n                  fullWidth\n                  multiline={true}\n                  rowsMax={4}\n                  value={seller ? seller.address : null}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n              </div>\n            </Grid>\n            <Grid item>\n              <div className=\"text-align-right\">\n                <h5 className=\"mb-20\">Bill To</h5>\n                <TextValidator\n                  className=\"mb-20\"\n                  label=\"Buyer Name\"\n                  onChange={event =>\n                    this.handleSellerBuyerChange(event, \"buyer\")\n                  }\n                  type=\"text\"\n                  name=\"name\"\n                  fullWidth\n                  value={buyer ? buyer.name : null}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n                <TextValidator\n                  label=\"Buyer Address\"\n                  onChange={event =>\n                    this.handleSellerBuyerChange(event, \"buyer\")\n                  }\n                  type=\"text\"\n                  name=\"address\"\n                  fullWidth\n                  multiline={true}\n                  rowsMax={4}\n                  value={buyer ? buyer.address : null}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n              </div>\n            </Grid>\n          </Grid>\n\n          {/* Item list for editing */}\n          <Table className=\"mb-16\">\n            <TableHead>\n              <TableRow className=\"bg-light-gray\">\n                <TableCell className=\"pl-sm-24\">#</TableCell>\n                <TableCell className=\"px-0\">Item Name</TableCell>\n                <TableCell className=\"px-0\">Unit Price</TableCell>\n                <TableCell className=\"px-0\">Unit</TableCell>\n                <TableCell className=\"px-0\">Cost</TableCell>\n                <TableCell className=\"px-0\">Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {invoiceItemList.map((item, index) => {\n                this.subTotalCost += item.price * item.unit;\n                return (\n                  <TableRow key={index}>\n                    <TableCell className=\"pl-sm-24 capitalize\" align=\"left\">\n                      {index + 1}\n                    </TableCell>\n\n                    <TableCell className=\"pl-0 capitalize\" align=\"left\">\n                      <TextValidator\n                        label=\"Item Name\"\n                        onChange={event =>\n                          this.handleIvoiceListChange(event, index)\n                        }\n                        type=\"text\"\n                        name=\"name\"\n                        fullWidth\n                        value={item ? item.name : null}\n                        validators={[\"required\"]}\n                        errorMessages={[\"this field is required\"]}\n                      />\n                    </TableCell>\n\n                    <TableCell className=\"pl-0 capitalize\" align=\"left\">\n                      <TextValidator\n                        label=\"Item Price\"\n                        onChange={event =>\n                          this.handleIvoiceListChange(event, index)\n                        }\n                        type=\"number\"\n                        name=\"price\"\n                        fullWidth\n                        value={item ? item.price : null}\n                        validators={[\"required\"]}\n                        errorMessages={[\"this field is required\"]}\n                      />\n                    </TableCell>\n\n                    <TableCell className=\"pl-0 capitalize\" align=\"left\">\n                      <TextValidator\n                        label=\"Item Unit\"\n                        onChange={event =>\n                          this.handleIvoiceListChange(event, index)\n                        }\n                        type=\"number\"\n                        name=\"unit\"\n                        fullWidth\n                        value={item ? item.unit : null}\n                        validators={[\"required\"]}\n                        errorMessages={[\"this field is required\"]}\n                      />\n                    </TableCell>\n\n                    <TableCell className=\"pl-0 capitalize\" align=\"left\">\n                      {item.unit * item.price}\n                    </TableCell>\n\n                    <TableCell className=\"pl-0 capitalize\" align=\"left\">\n                      <Button\n                        onClick={() => this.deleteItemFromInvoiceList(index)}\n                      >\n                        Delete\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n          <div className=\"flex flex-end px-16 mb-16\">\n            <Button onClick={this.addItemToInvoiceList}>Add Item</Button>\n          </div>\n\n          {/* total cost calculation */}\n          <div className=\"px-16 flex flex-end\">\n            <div className=\"flex\">\n              <div className=\"pr-48\">\n                <p className=\"mb-32\">Sub Total:</p>\n                <p className=\"mb-36\">Vat(%):</p>\n                <p className=\"mb-32\">currency:</p>\n                <strong>\n                  <p>Grand Total:</p>\n                </strong>\n              </div>\n              <div>\n                <p className=\"mb-16\">{this.subTotalCost}</p>\n                <TextValidator\n                  className=\"mb-16\"\n                  label=\"Vat\"\n                  onChange={this.handleChange}\n                  type=\"number\"\n                  name=\"vat\"\n                  value={vat}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n                <br />\n                <TextValidator\n                  label=\"Currency\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"currency\"\n                  value={currency}\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                />\n                <p style={{ marginTop: \"18px\" }}>\n                  <strong>\n                    {currency}\n                    {this.subTotalCost * vat}\n                  </strong>\n                </p>\n              </div>\n            </div>\n          </div>\n        </ValidatorForm>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(InvoiceEditor);\n","import React, { Component } from \"react\";\nimport { Card } from \"@material-ui/core\";\nimport InvoiceViewer from \"./InvoiceViewer\";\nimport InvoiceEditor from \"./InvoiceEditor\";\n\nclass InvoiceDetails extends Component {\n  state = {\n    showInvoiceEditor: false,\n    isNewInvoice: false\n  };\n\n  toggleInvoiceEditor = () => {\n    this.setState({\n      showInvoiceEditor: !this.state.showInvoiceEditor,\n      isNewInvoice: false\n    });\n  };\n\n  componentWillMount() {\n    if (this.props.match.params.id === \"add\")\n      this.setState({ showInvoiceEditor: true, isNewInvoice: true });\n  }\n\n  render() {\n    return (\n      <Card elevation={6} className=\"invoice-details m-sm-30\">\n        {this.state.showInvoiceEditor ? (\n          <InvoiceEditor\n            toggleInvoiceEditor={this.toggleInvoiceEditor}\n            isNewInvoice={this.state.isNewInvoice}\n          />\n        ) : (\n          <InvoiceViewer toggleInvoiceEditor={this.toggleInvoiceEditor} />\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default InvoiceDetails;\n"],"sourceRoot":""}